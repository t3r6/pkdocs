{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"This site contains information regarding PC games based on PainEngine/NecroEngine","text":"<p> Heaven's Got a Hitman </p> <p>Painkiller is a first-person shooter video game developed by the Polish game studio People Can Fly and published by DreamCatcher Interactive in April 2004.</p> <p>It was the first game based on PainEngine. Apparently, this engine used some modified pieces of Quake code and included some proprietary tools like: Havok 2.0 (for physics), Miles Engine (for sound), Xtreme Toolkit (for exe). NecroEngine is a continuation of PainEngine that was significantly improved. The engine seems to have been deprecated after 2010.</p> <p>Some history on the Painkiller development was told by the former People Can Fly employees who founded The Astronauts game company. The article can be found here.</p>"},{"location":"#painengine-games","title":"PainEngine games","text":"<ul> <li>Painkiller 2004</li> <li>Painkiller: Battle out of Hell 2004</li> <li>Painkiller: Black Edition DVD / Gold Edition CD 2004 (Painkiller with BooH expansion)</li> <li>Painkiller: Special Edition 2006 (a cut and budget version of the game)</li> <li>Painkiller: Hell Wars 2006 (Xbox port; PSP version was canceled)</li> <li>Painkiller: Overdose 2007</li> <li>Painkiller: Resurrection 2009</li> <li>Painkiller: Redemption 2011</li> <li>Painkiller: Recurring Evil 2012</li> </ul>"},{"location":"#necroengine-games","title":"NecroEngine games","text":"<ul> <li>NecroVisioN 2009</li> <li>NecroVisioN: Lost Company 2010</li> </ul>"},{"location":"#unreal-engine-3-game-remake","title":"Unreal Engine 3 game remake","text":"<ul> <li>Painkiller Hell &amp; Damnation 2012 (PS3 and Xbox 360)</li> </ul>"},{"location":"#ripp3d-engine-mobile-games","title":"Ripp3D Engine mobile games","text":"<ul> <li>Painkiller: Purgatory 2010</li> <li>Painkiller: Purgatory HD 2010</li> </ul>"},{"location":"mkdocs-dev/","title":"MkDocs development guide","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"mkdocs-dev/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"mkdocs-dev/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"mkdocs-dev/#documentation-flow","title":"Documentation Flow","text":"<p>This section defines necessary steps to wok with the MkDocs Material Framework. The framework presents a static site generator with documentation written in Markdown. All the docs are configured with a YAML configuration file.</p> <p>There are two options for working with MkDocs:</p> <ul> <li>MkDocs via Podman/Docker</li> <li>MkDocs via Python PIP</li> </ul>"},{"location":"mkdocs-dev/#mkdocs-via-podmandocker","title":"MkDocs via Podman/Docker","text":""},{"location":"mkdocs-dev/#prerequisites","title":"Prerequisites","text":"<ul> <li>Podman or Docker</li> <li>Make</li> <li>mkdocs cli</li> </ul>"},{"location":"mkdocs-dev/#workflow","title":"Workflow","text":"<ol> <li> <p>Clone the edp-install repository to your local folder.</p> </li> <li> <p>Run the following command:</p> <pre><code>make docs\n</code></pre> <p>For Docker</p> <pre><code>make docs ENGINE=docker\n</code></pre> </li> <li> <p>Enter the http://localhost:8000 address in the browser and check that documentation pages are available.</p> </li> <li> <p>Open the editor, navigate to the docs/ directory and make necessary changes. All the changes will be updated dynamically at http://localhost:8000.</p> </li> <li> <p>Create a merge request with changes or deploy to GitHub pages manually:</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> </li> </ol>"},{"location":"mkdocs-dev/#mkdocs-via-python-pip","title":"MkDocs via Python PIP","text":""},{"location":"mkdocs-dev/#prerequisites_1","title":"Prerequisites","text":"<ul> <li>Python</li> <li>Python PIP</li> <li>mkdocs cli</li> </ul>"},{"location":"mkdocs-dev/#workflow_1","title":"Workflow","text":"<ol> <li> <p>Run the following command:</p> <pre><code>pip install -r  docker-image/mkdocs/requirements.txt\n</code></pre> </li> <li> <p>Run a local development server:</p> <pre><code>mkdocs serve --dev-addr 0.0.0.0:8000\n</code></pre> <p>For Windows:</p> <pre><code>python -m mkdocs serve --dev-addr 0.0.0.0:8000\n</code></pre> </li> <li> <p>Enter the http://localhost:8000 address in the browser and check that documentation pages are available.</p> </li> <li> <p>Open the editor, navigate to the docs/ directory and make necessary changes. All the changes will be updated dynamically at http://localhost:8000.</p> </li> <li> <p>Create a merge request with changes or deploy to GitHub pages manually:</p> <pre><code>mkdocs gh-deploy --force\n</code></pre> </li> </ol>"},{"location":"guides/hacking/hack-linux-bin/","title":"Hack Painkiller 2004 Linux Game Server Binary","text":"<p>pkserver Linux binary has very limited capabilities.</p> <p>It seems that it can only accept <code>+interface</code> and <code>+private</code> parameters.</p> <p>Alternatively, you can indicate the corresponding interface parameter <code>Cfg.NetworkInterface</code> in the <code>config.ini</code> without passing <code>+interface</code> to the binary.</p> <p>On the other hand, <code>Cfg.PublicServer</code> does not seem to affect <code>pkserver</code> at all and only works when passed explicitly to the binary via the <code>+private</code> parameter.</p> <p>The main drawback of <code>pkserver</code> is that it cannot accept custom <code>LScripts.pak</code> and custom <code>config.ini</code>.</p> <p>Since the game code is closed, we cannot fix it programmatically. However, we can hack the binary with the Hex editor.</p> <p>Note</p> <p>Examine the <code>pkserver</code> directory. Pay attention that Linux is case-sensitive, unlike Windows. Developers linked <code>bin</code> to <code>Bin</code> and <code>data</code> to <code>Data</code>:</p> <pre><code>```\n[login@shell opt]$ cd pkserver\n[login@shell pkserver]$ ls -al\n\ntotal 20\ndrwxr-xr-x 5 painkiller     painkiller     4096 Jun 12 06:38 .\ndrwxrwxr-x 4 painkiller     painkiller     4096 Jun 12 06:50 ..\nlrwxrwxrwx 1 painkiller     painkiller        3 Feb  4  2005 bin -&gt; Bin\ndrwxr-xr-x 2 painkiller     painkiller     4096 Jun 11 14:05 Bin\nlrwxrwxrwx 1 painkiller     painkiller        4 Mar 25  2005 data -&gt; Data\ndrwxr-xr-x 7 painkiller     painkiller     4096 Jun 11 14:05 Data\ndrwxr-xr-x 2 100999 100999 4096 Jun 12 06:38 pkserver\n\n```\n</code></pre>"},{"location":"guides/hacking/hack-linux-bin/#hack-config","title":"Hack config","text":""},{"location":"guides/hacking/hack-linux-bin/#using-hex-editor","title":"Using Hex editor","text":"<p>If you want to use a different <code>config.ini</code> with your binary, do the following:</p> <ol> <li> <p>Copy the <code>pkserver</code> binary with a different name, for example, <code>pkserver13</code>.</p> </li> <li> <p>Open the copied and renamed <code>pkserver13</code> file with any Hex editor and replace <code>config.ini</code> with <code>conf13.ini</code>.</p> <p>Warning</p> <p>The length of the <code>config.ini</code> name should be the same - 6 letters or less. For instance, you can name it as <code>conf13.ini</code> but you cannot name it <code>myconfig.ini</code>. If the config name is less than 6 letters, you need to replace it with consequent binary nulls. The size of the file should not be changed.</p> </li> <li> <p>Save the file. Now the <code>pkserver13</code> binary will only accept a config with the name <code>conf13.ini</code> located in the <code>pkserver/Bin</code> directory.</p> </li> </ol>"},{"location":"guides/hacking/hack-linux-bin/#using-binary-block-editor","title":"Using Binary Block Editor","text":"<p>An alternative way of hacking is to use the bbe Linux tool.</p> <p>Download the tool and run the following commands:</p> <pre><code>bbe -e 's/config.ini/conf13.ini/' pkserver &gt; pkserver13\nchmod 755 pkserver13\n</code></pre>"},{"location":"guides/hacking/hack-linux-bin/#hack-lscripts","title":"Hack LScripts","text":"<p><code>lscripts.pak</code> is a soft link to <code>LScripts.pak</code>. The game checks for <code>LScripts.pak</code>, but loads <code>lscripts.pak</code>.</p> <p>Let's assume, you want to use a custom <code>LScript3.pak</code> with the custom <code>pkserver13</code> binary.</p> <p>You can either create a symlink from <code>lscript3.pak</code> to <code>LScript3.pak</code> and replace all instances of <code>lscripts.pak</code> with <code>lscript3.pak</code> and <code>LScripts.pak</code> with <code>LScript3.pak</code> in the <code>pkserver13</code> binary.</p> <p>However, I suggest replacing both <code>LScripts.pak</code> and <code>lscripts.pak</code> with <code>LScript3.pak</code>. No symlinks will be required in this case and the game will load the correct package.</p>"},{"location":"guides/hacking/hack-linux-bin/#using-hex-editor_1","title":"Using Hex editor","text":"<ol> <li> <p>Copy the <code>pkserver</code> binary with a different name, for example, <code>pkserver13</code>.</p> </li> <li> <p>Open the copied and renamed <code>pkserver13</code> file with any Hex editor and replace all <code>LScripts.pak</code> and <code>lscripts.pak</code> instances with <code>LScript3.pak</code>.</p> <p>Warning</p> <p>The length of the <code>LScripts.pak</code> name should be the same - 8 letters or less. For instance, you can name it as <code>LScript3.pak</code> but you cannot name it <code>MyLScripts.pak</code>. If the config name is less than 8 letters, you need to replace it with consequent binary nulls. The size of the file should not be changed.</p> </li> </ol>"},{"location":"guides/hacking/hack-linux-bin/#using-binary-block-editor_1","title":"Using Binary Block Editor","text":"<pre><code>bbe -e 's/LScripts.pak/LScript3.pak/' pkserver &gt; pkserver_temp\nbbe -e 's/lscripts.pak/LScript3.pak/' pkserver_temp &gt; pkserver13_temp\nmv pkserver13_temp pkserver13\nchmod 755 pkserver13\n</code></pre>"},{"location":"guides/hacking/hack-linux-bin/#change-gamespy-to-openspy","title":"Change GameSpy to OpenSpy","text":"<p>If you have the original <code>pkserver</code> binary, the same way you can replace all instances of <code>gamespy.com</code> with <code>openspy.net</code>.</p>"},{"location":"guides/mapping/blender-move-bulk-objects/","title":"Move parts of objects in bulk in Blender","text":"<p>Sometimes you may need to move several map objects including zones to another place but simple moving technics just do not work because some objects are too large and a map may contain geometry combined with different objects.</p> <p>The right way would be to select multiple objects using the combination of Object Mode and Edit mode selection:</p> <ol> <li> <p>Import a map.</p> </li> <li> <p>If the map is too big to observe, you need to increase the <code>View End</code> distance in the 3D View area's <code>Properties</code> <code>N</code> menu &gt; <code>View</code> tab. Consult the official Blender documentation.</p> <p> Blender View </p> </li> <li> <p>Deselect all objects <code>Alt - A</code>.</p> </li> <li> <p>Go to the X-Ray mode <code>Shift - X</code>. This mode will help you visually to select every detail without missing anything.</p> </li> <li> <p>Select the area you want to move in the Object mode. Use <code>Shift</code> and click left mouse button two times on objects to deselect parts that are not required. If objects are too lagre, you won't be able to deselect parts of them in the Object mode. Here is an example on DM_Sergio, I wanted to select the building on the left but it just did not allow me to do so in the Object mode, thus, I was only able to deselect the unwanted map deathzones in this mode:</p> <p> Blender Object Mode Select </p> </li> <li> <p>Go to the Edit Mode <code>Tab</code>.</p> </li> <li> <p>Select the required objects. Use <code>Shift</code> to select additional parts. Make sure you selected every surface of the objects. Use the fly/walk mode to look around the objects to double check. In this example, the building consists of multiple objects but we select it as one:</p> <p> Blender Editor Mode Select </p> </li> <li> <p>Now you can proceed with moving the objects. Don't touch the mouse and click <code>G</code> then click the axis button <code>X</code>,<code>Y</code>, or <code>Z</code>. Drag the object with the mouse after that. Use <code>Esc</code> or <code>Ctrl - Z</code> to reset.</p> <p> Blender Editor Mode Move </p> </li> <li> <p>Exit the Editor mode <code>Tab</code> and save the changes.</p> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/","title":"Blender Painkiller MPK geometry plugins","text":"<p>Warning</p> <p>Blender constraints: the current max ID names size is 63 usable bytes (for example, a mesh name). This limit should be increated in Blender 5. It means that some Painkiller mesh names could be cut during the map import; it's the usual case with the maps from Painkiller Resurrection but can happen in any PainEngine/NecroEngine game. Since some mesh names might contain specific key words for the engine, like \"barrier\", you need to pay attention to those cut names and rename them accordingly after the import.</p> <p>Warning</p> <p>Painkiller only supports meshes that have 2 UV map texture channels (colormap and lightmap). If a mesh have more channels, the plugin will use only 2 of them.</p> <p>Blender add-on that imports and exports Painkiller (PC game 2004) MPK geometry files.</p> <p>PainEditor is not capable of editing geometry files for Painkiller. It's mostly designed to create gameplay and atmosphere.</p> <p>In order to edit an MPK geometry files for Painkiller, you need a 3D editor like Autodesk Maya, Autodesk 3ds Max, or Blender. This guide is aimed at Blender.</p> <p>The plugin was created by dilettante. Tested on Blender 4.2 LTS.</p> <p>Note</p> <p>The guide was edited on May 04, 2025 and is actual at the time of writing. Some information may be outdated by the time you read it.</p> <p>The main plugin repository.</p> <p>Backup repository.</p>"},{"location":"guides/mapping/blender-mpk-plugins/#installation-via-gui","title":"Installation via GUI","text":"<ol> <li> <p>Download the latest plugin version from GitHub. Pick the latest relese.</p> </li> <li> <p>Either use the prepared ZIP archive from the GitHub release assets or create a ZIP archive that should contain the <code>io_scene_mpk</code> folder and the plugin python scripts inside:</p> <pre><code>io_scene_mpk\\__init__.py\nio_scene_mpk\\export_mpk.py\nio_scene_mpk\\import_mpk.py\n</code></pre> </li> <li> <p>In Blender, open <code>Edit</code> &gt; <code>Preferences</code> and switch to the <code>Add-ons</code> section.</p> </li> <li> <p>Click on the drop down menu at the upper right, select <code>Install from Disk...</code>, and choose the ZIP archive with the plugin.</p> <p> Blender Plugin Installation </p> </li> <li> <p>Search for the add-on on the list: enter <code>Painkiller MPK format</code> and tick it to enable.</p> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/#manual-installation","title":"Manual Installation","text":"<ol> <li> <p>Download the latest plugin version from GitHub.</p> </li> <li> <p>Put the unpacked <code>io_scene_mpk</code> folder with the python scripts to <code>C:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons</code>:</p> <pre><code>C:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons\\io_scene_mpk\\__init__.py\nC:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons\\io_scene_mpk\\export_mpk.py\nC:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons\\io_scene_mpk\\import_mpk.py\n</code></pre> <p>Alternative path:</p> <pre><code>%AppData%\\Blender Foundation\\Blender\\4.2\\scripts\\addons\\\n</code></pre> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/#import","title":"Import","text":"<p>Once the addon has been installed, you will be able to import Painkiller MPK geometry.</p> <ol> <li> <p>Extract a PKM or a PAK archive with the map geometry and textures.</p> <p>Note</p> <p>The texture folder usually has the same naming as the geometry file name. For example, <code>Maps.pak/4x02_Babel.mpk</code> geometry has corresponding textures in <code>Textures.pak/Levels/4x02_Babel</code>.</p> </li> <li> <p>Create a new folder and copy the MPK geometry file and all the map textures to that folder.</p> </li> <li> <p>In Blender, delete the default scene: in the upper right of your screen, right-click on <code>Collection</code> &gt; <code>Delete Hierarchy</code>.</p> <p> Blender Delete Collection </p> </li> <li> <p>Make sure you deleted everytihng from the Blender default scene collection. Save the new defaults so that Blender default example objects won't interfere with your imported geometry. Because you always import on top of something, the workspace should be clean. Go to <code>File</code> &gt; <code>Defaults</code> &gt; <code>Save Startup File</code>.</p> </li> <li> <p>Import Painkiller MPK geometry file via <code>File</code> &gt; <code>Import</code> &gt; <code>Painkiller World Mesh (.mpk)</code>.</p> <p> Blender Plugin Import Options </p> <p>Notes</p> <ul> <li>Merge verticies is enabled by default and recommended. It will join all the closest separated geometry.</li> </ul> </li> <li> <p>Deselect all objects <code>Alt - A</code>.</p> </li> <li> <p>Click <code>Shading</code> &gt; <code>Display render preview</code> in Blender. Now you will be able to see the map with textures and lightmaps.</p> </li> <li> <p>Find the collectoin with the <code>__zone__</code> name and click on the <code>eye</code> to disable it from Viewport. This collection includes portals (do not confuse it with teleports), antiportals, and zones.</p> <p> Blender Shading View </p> </li> <li> <p>If the map is too big to observe, you need to increase the <code>View End</code> distance in the 3D View area's <code>Properties</code> <code>N</code> menu &gt; <code>View</code> tab. Consult the official Blender documentation.</p> <p> Blender View </p> </li> <li> <p>Navigate with the fly/walk mode <code>Shift-~</code> and use the mouse scroll wheel to control the speed. If you are new to Blender, start learning from navigation basics. There are plenty of tutorials online.</p> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/#export","title":"Export","text":"<ol> <li> <p>Export Painkiller MPK geometry file via <code>File</code> &gt; <code>Export</code> &gt; <code>Painkiller World Mesh (.mpk)</code>.</p> <p> Blender Plugin Export Options </p> <p>Notes</p> <ul> <li>Choose the export mode. Default is only recommended for testing maps to reduce export time.   Optimize is what you need to choose for final maps - it'll reduce the .mpk size.</li> <li>You can choose whether to export All, Only selected, or Only visible objects to .mpk.</li> </ul> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/#prepare-map-for-paineditor","title":"Prepare map for PainEditor","text":"<p>A simple Painkiller map has the following structure (check inside default Painkiller PKM and PAK files as examples):</p> <pre><code>../Painkiller/Data/Levels/Mapname/\n../Painkiller/Data/Maps/mapname.mpk\n../Painkiller/Data/Textures/Levels/mapname/\n</code></pre> <p>Another example:</p> <pre><code>.\n\u251c\u2500\u2500 Levels\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 CTF_Ruins\n\u251c\u2500\u2500 Maps\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 MOPPCode\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ruins_mini.mpk\n\u2514\u2500\u2500 Textures\n    \u251c\u2500\u2500 Levels\n    \u2514\u2500\u2500 Skies\n</code></pre> <p>You need to create those folders manually when you prepare a map.</p> <ol> <li> <p>Put the <code>untitled.mpk</code> into the <code>Painkiller/Data/Maps</code> folder.</p> </li> <li> <p>The <code>../Data/Maps/MOPPCode</code> folder is generated automatically each time you load your map in the game. Make sure you don't have any Havok <code>MOPPCode</code> of the similar <code>.mpk</code> file generated before. If so, delete the <code>Painkiller/Data/Maps/MOPPCode/untitled.mpk</code> folder. Also, make sure that you don't have any duplicates of your complete PKM map with the same MPK name inside in the <code>Data</code> directory or there will be geometry conflicts.</p> <p>Warning</p> <p>You always need to remove the automatically generated <code>MOPPCode</code> each time you create a new geometry within the same file name before running a map. <code>MOPPCode</code> can lead to unexpected results when it does not match the version of the <code>.mpk</code> file.</p> <p>It is safe to remove the whole <code>../Data/Maps/MOPPCode</code> directory before testing a map.</p> </li> <li> <p>Open <code>Painkiller/Data/Levels/DM_Untitled/DM_Untitled.CLevel</code> with a notepad and change the following line to match your new geometry file:</p> <pre><code>o.Map = \"untitled.mpk\"\n</code></pre> </li> <li> <p>The folder with the textures should match the name of the MPK file: <code>Painkiller/Data/Textures/Levels/untitled</code>. If it does not match, you won't see textures on your map.</p> </li> <li> <p>Run your map in PainEditor to check if the map configuration was correct. Put all the items, gameplay, effects via the PainEditor.</p> </li> <li> <p>Pack your map properly to distribute it.</p> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/#uninstall-plugins-via-gui","title":"Uninstall plugins via GUI","text":"<ol> <li> <p>In Blender, open <code>Edit</code> &gt; <code>Preferences</code> and switch to the <code>Add-ons</code> section.</p> </li> <li> <p>Search for the <code>Painkiller MPK format</code> plugin.</p> </li> <li> <p>Click on the dropdown menu and remove the plugin by clicking <code>Remove</code>.</p> </li> </ol>"},{"location":"guides/mapping/blender-mpk-plugins/#uninstall-plugins-manual","title":"Uninstall plugins manual","text":"<p>Remove the following files from the Blender folder:</p> <pre><code>C:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons\\io_scene_mpk\\__init__.py\nC:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons\\io_scene_mpk\\export_mpk.py\nC:\\Program Files\\Blender Foundation\\Blender 4.2\\4.2\\scripts\\addons\\io_scene_mpk\\import_mpk.py\n</code></pre> <p>Alternative path:</p> <pre><code>%AppData%\\Blender Foundation\\Blender\\4.2\\scripts\\addons\\\n</code></pre>"},{"location":"guides/mapping/blender-pk-ase-exporter/","title":"Blender Painkiller ASE geometry exporter plugin (Outdated)","text":"<p>Blender add-on that exports Painkiller (PC game 2004) MPK geometry in ASE format.</p> <p>The plugins were created by dilettante. Tested on Blender 4.2 LTS.</p> <p>Note</p> <p>The guide was written when we did not have proper MPK exporter for Painkiller. Right now this guide can be considered obsolete but is left here for some corner cases.</p> <p>Before we got a fully fledged Painkiller MPK exporter for Blender, we had to use a combination of tools: Painkiller Ase Exporter Addon for Blender, Painkiller Lightmap MPK list exporter Blender plugin, ase2mpk (an official People Can Fly tool), and PKBlend.</p>"},{"location":"guides/mapping/blender-pk-ase-exporter/#blender-plugin-installation","title":"Blender plugin installation","text":"<p>You need to install the following plugins for Blender:</p> <ol> <li> <p>Painkiller Ase Exporter Addon for Blender</p> <ul> <li>Install the plugin as a ZIP archive in Blender.</li> </ul> </li> <li> <p>Painkiller Lightmap MPK list exporter for Blender</p> <ul> <li> <p>Download the release </p> </li> <li> <p>Install the plugin as a ZIP archive in Blender.</p> </li> </ul> </li> </ol>"},{"location":"guides/mapping/blender-pk-ase-exporter/#additional-mandatory-tools","title":"Additional mandatory tools","text":"<ol> <li> <p><code>PKBlend</code>. You can grab this tool here.</p> </li> <li> <p><code>ase2mpk</code> is an official People Can Fly tool that is always shipped with the Painkiller game, usually located in the <code>Painkiller Black Full\\Exporters</code> folder.</p> </li> </ol> <p>Alternatively, the tools can be found on ModDB.</p>"},{"location":"guides/mapping/blender-pk-ase-exporter/#export","title":"Export","text":"<ol> <li> <p>Make the necessary changes to the geometry.</p> </li> <li> <p>Since you installed the above mentioned Blender plugins, click <code>File</code> &gt; <code>Export</code> &gt; <code>ASCII Scene Exporter</code>.</p> </li> <li> <p>Pay attention to the exporter settings:</p> <p> Blender ASE Exporter Settings </p> <ul> <li> <p>Triangulate. Note that this option will increase the export time. Better triangulate the whole map manually before the export.</p> </li> <li> <p>Recalculate Normals. This option is disabled by default and I suggest leaving it like that because it can break normals on a map during export.</p> </li> <li> <p>Ivert Y normal. Should be always enabled if we are going to use <code>ase2mpk</code> which is a common situation. This is a workaround since <code>ase2mpk</code>  has a bug with inverted normals so basically we will eventually invert normals 2 times to get a proper result.</p> </li> <li> <p>Remove Doubles. This option is disabled by default. Removes any duplicate vertices before exporting. Recommended for final maps.</p> </li> </ul> <p>Warning</p> <p>The latest version of the plugin has one noticed bug: it does not transform the hidden objects. Transformations are very important for Painengine so make sure you unhid all the object before the export.</p> </li> <li> <p>Open the system console in case you need to debug the export, it is higly recommended. Go to <code>Window</code> -&gt; <code>Toggle System Console</code>. </p> </li> <li> <p>Enter the future <code>.ase</code> file name and click <code>Export</code>. Exporting process is very slow and can take several minutes depending on a map.</p> </li> <li> <p>Now we need to export the lighmap information from the map using the Painkiller Lightmap MPK plugin which you installed earlier. Click <code>File</code> &gt; <code>Export</code> &gt; <code>Painkiller Blendlist (.txt)</code>.</p> </li> <li> <p>Now you got 2 files, let's say: <code>untitled.ase</code> and <code>untitled.txt</code>.</p> </li> <li> <p>The next step is to transform our <code>.ase</code> geometry into the Painkiller <code>.mpk</code> format. Go to the original Painkiller directory or just copy the <code>ase2mpk.exe</code> to the directory where you have the <code>.ase</code> exported file. This is a command line tool so it should be run from Powershell or CMD:</p> <pre><code>.\\ase2mpk.exe -o untitled.ase\n</code></pre> <p>Follow the command prompt. You should get a similar output:</p> <pre><code>Copyright (c) 2003,2004 People Can Fly\nase2mpk converts 3ds max ASE files to Pain Engine mpk format\nversion 1.2\n\nmesh data optimization ON, may take a while ...\n\nDone!\n\npress any key...\n</code></pre> <p>The conversion is pretty fast. This tool will create <code>untitled.mpk</code> in the same directory. If something goes wrong, the tool creates a log file in the same folder.</p> </li> <li> <p>Now it's time to fix lightmaps. This is where PKBlend comes in handy. We need to combine the blendlist <code>untitled.txt</code> with the generated <code>untitled.mpk</code>. Run <code>PKBlend</code>.</p> </li> <li> <p>You will need to select matching <code>untitled.txt</code> and <code>untitled.mpk</code> at the same time using <code>Ctrl - left mouse click</code>. Then click <code>Blend</code>:</p> <p> PKBlend </p> <p>As a result, the <code>PKBlend</code> tool will replace <code>untitled.mpk</code> with the updated version of <code>untitled.mpk</code>. The previous file version will be saved as <code>untitled.bak</code>.</p> <p>Warning</p> <p>Painkiller only supports meshes that have 2 UV map channels. If a mesh have more channels, <code>PKBlend</code> will throw an error.</p> </li> </ol>"},{"location":"guides/mapping/blender-pk-ase-exporter/#blendmaps","title":"Blendmaps","text":"<p>Note</p> <p>This information is outdated and was added for reference.</p> <p>Warning</p> <p>PKBlend v0.3b does not support blendmaps for meshes that have several materials each of which uses its own blendmap. For example, terrain meshes with grass on C5L3_Monastery.</p> <p>Blendmaps are the mix of textures. The ASE exporter plugin does not export this information. Most often, such complex textures are used for terrain and lava, like on DM_Unseen, DM_Fallen1, C3L6_Forest, C5L4_Hell.</p> <p>To export such materials properly using the ASE exporter, you need the following prerequisites:</p> <ol> <li> <p>A map should be imported with disabled blendmaps:</p> <p> Blender Plugin Import Options for ASE exporter </p> </li> <li> <p>Use mpk2ase on the original map to export the object and texture information. Just drag the map on <code>mpk2ase.exe</code>. It'll create several files and you will only need <code>Obj.txt</code>.</p> </li> <li> <p>When you complete a map, export by clicking <code>File</code> &gt; <code>Export</code> &gt; <code>ASCII Scene Exporter</code>.</p> </li> <li> <p>Now we need to export the lighmap information from the map using the Painkiller Lightmap MPK plugin which you installed earlier. Click <code>File</code> &gt; <code>Export</code> &gt; <code>Painkiller Blendlist (.txt)</code>.</p> </li> <li> <p>The next step is to transform our <code>.ase</code> geometry into the Painkiller <code>.mpk</code> format. Go to the original Painkiller directory or just copy the <code>ase2mpk.exe</code> to the directory where you have the <code>.ase</code> exported file. This is a command line tool so it should be run from Powershell or CMD:</p> <pre><code>.\\ase2mpk.exe -o untitled.ase\n</code></pre> <p>Follow the command prompt. You should get a similar output:</p> <pre><code>Copyright (c) 2003,2004 People Can Fly\nase2mpk converts 3ds max ASE files to Pain Engine mpk format\nversion 1.2\n\nmesh data optimization ON, may take a while ...\n\nDone!\n\npress any key...\n</code></pre> <p>The conversion is pretty fast. This tool will create <code>untitled.mpk</code> in the same directory. If something goes wrong, the tool creates a log file in the same folder.</p> </li> <li> <p>Now it's time to fix lightmaps. This is where PKBlend comes in handy. We need to combine the blendlist <code>untitled.txt</code> with the generated <code>untitled.mpk</code>. Run <code>PKBlend</code>.</p> </li> <li> <p>You will need to select matching <code>untitled.txt</code> and <code>untitled.mpk</code> at the same time using <code>Ctrl - left mouse click</code>. Then click <code>Blend</code>:</p> <p> PKBlend </p> <p>As a result, the <code>PKBlend</code> tool will replace <code>untitled.mpk</code> with the updated version of <code>untitled.mpk</code>. The previous file version will be saved as <code>untitled.bak</code>.</p> </li> <li> <p>Now get the <code>Obj.txt</code> and combine it with the received <code>untitled.mpk</code> with <code>PKBlend</code> once again.</p> </li> </ol> <p>Sometimes <code>Obj.txt</code> is not generated correctly, so you might need to fix it manually. The full list for two objects might look this way. Pay attention that plane01_trans and plane02_trans do not have gaps between them:</p> <pre><code>plane01_trans\n0.000000\n0.000000\n5.000000\n5.000000\nmy_lightmap\nmy_blendmap\n0.000000\n0.000000\n1.000000\n1.000000\nmy_alphamask\nplane02_trans\n0.000000\n0.000000\n5.000000\n5.000000\nmy_lightmap\nmy_blendmap\n0.000000\n0.000000\n1.000000\n1.000000\nmy_alphamask\n</code></pre> <p>If you see gaps and some fields are missing, it means whether the original mesh did not have them or these was an incomplete export and you need to fix the list manually.</p>"},{"location":"guides/modding/3d-editor-pk-plugins/","title":"3D graphics software for Painkiller resources","text":"<ul> <li> <p>Autodesk Maya plugins by XDavidXtreme</p> </li> <li> <p>Autodesk 3ds MAX plugins by dilettante</p> </li> <li> <p>Additional converter tools (outdated) by dilettante</p> </li> <li> <p>HavokXML2HKE converter for Havok Content Tools Ragdoll physics by dilettante</p> </li> <li> <p>Blender plugins by dilettante. Additional backup.</p> </li> </ul>"},{"location":"guides/modding/cubemaps/","title":"Cubemaps in Painkiller","text":"<p> Cubemap example </p> <p>A cubemap aka skybox is a texture that contains 6 individual 2D textures that each form one side of a cube: a textured cube.</p> <p>Cubemaps in Painkiller are used for teleports on any settings and water on low settings.</p> <p>It's possible to use cubemaps for skyboxes in Painkiller assigned to outer cube like in most other games; however, Painkiller uses skydomes by default, which is a different technololy and skyboxes are not recommended because a skybox will block the vision of any skydome on the map in this case.</p> <p>Warning</p> <p>Cubemap sizes should be proportional: 512x512, 1024x1024, 2048x2048, 4096x4096.</p>"},{"location":"guides/modding/cubemaps/#assemble-cubemapsskyboxes-from-sources-for-painkiller","title":"Assemble cubemaps/skyboxes from sources for Painkiller","text":"<p>It's difficult to find one image cubemaps/skyboxes in the internet. They are usually shipped as 6 separate images (back, bottom, front, left, right, top).</p> <p>Check the relations between the axis and the images on this picture:</p> <p> Cubemap unwrapped </p> <p> Cubemap unwrapped variations </p> <p>Note</p> <p>X+ (right); X- (left); Y+ (top); Y- (bottom); Z+ (front); Z- (back)</p> <p>Let's assemble a cubemap/skybox. You can download all the image sources here.</p> <p>You need Photoshop or free and opensource GIMP for this procedure. I will be using GIMP.</p> <p>Note</p> <p>Painkiller uses the following names for the cubemap layers:</p> Layer name Image side main surface (positive x) right main surface (negative x) left main surface (positive y) top main surface (negative y) bottom main surface (positive z) front main surface (negative z) back"},{"location":"guides/modding/cubemaps/#example-1","title":"Example 1","text":"<ol> <li> <p>This step is not necessary but I recommend reducing the size of each image to 512x512. That's the size Painkiller uses for the default cubemaps.</p> <ul> <li>Open each image in GIMP and choose Image -&gt; Scale Image.</li> <li>Put width and height 512.</li> <li>Click Scale.</li> <li>To save it, click File -&gt; Export as. Name it as a resized image and click Export.</li> <li>Change quality to 100% and click Export.</li> </ul> <p> Image resize Image export </p> </li> <li> <p>Create layers</p> <ul> <li>Once all images are resized, open any resized image in GIMP and drag and drop other images as layers to the GIMP Layers pane:</li> </ul> <p> Cubemap layers </p> <ul> <li>Rename the layers according to the scheme matching the sides to the corresponing images (the order of layers does not matter but I will keep to the Painkiller defaults):</li> </ul> <p> Cubemap layers </p> <ul> <li> <p>Click File -&gt; Export as, choose Select File Type (by extentions), find first dds from the list, rename the file to, for example, \"scene1_cubemap.dds\", and click Export.</p> </li> <li> <p>Use the following settings:</p> <ul> <li> <p>Compression: BC1/DXT1</p> </li> <li> <p>Save: As cube map</p> </li> </ul> </li> </ul> <p> Cubemap export </p> </li> <li> <p>Test the cubemap.</p> <p>I will use DM_Sacred for testing.</p> <ul> <li> <p>Extract DM_Sacred folder from Painkiller <code>Data/Levels.pak</code>. Do not use PainEditor for this because it won't extract MapEntities. Use only custom extraction tools.</p> </li> <li> <p>Copy the extracted DM_Sacred folder to <code>Data/Levels</code>. Create folders if required. The path should be <code>Painkiller/Data/Levels/DM_Sacred</code>.</p> </li> <li> <p>Rename the map so that it won't conflict with the original. You need to rename the map Levels folder and the Clevel file. the  For example, <code>Painkiller/Data/Levels/DM_Sacred_cubemap_test/DM_Sacred_cubemap_test.CLevel</code></p> <pre><code>    .\n\u2514\u2500\u2500 DM_Sacred_cubemap_test\n    \u251c\u2500\u2500 CAcousticEnv\n    \u251c\u2500\u2500 CArea\n    \u251c\u2500\u2500 CBillboard\n    \u251c\u2500\u2500 CBox\n    \u251c\u2500\u2500 CEnvironment\n    \u251c\u2500\u2500 CItem\n    \u251c\u2500\u2500 CLight\n    \u251c\u2500\u2500 CParticleFX\n    \u251c\u2500\u2500 CSound\n    \u251c\u2500\u2500 DM_Sacred_cubemap_test.CLevel\n    \u2514\u2500\u2500 MapEntities\n</code></pre> </li> <li> <p>Copy your cubemap file to <code>Painkiller\\Data\\Textures\\Special\\scene1_cubemap.dds</code>. I named it as \"scene1_cubemap.dds\". Create folders if do not exist.</p> </li> <li> <p>Open <code>..\\Painkiller\\Data\\Levels\\DM_Sacred_cubemap_test\\MapEntities\\tele5_ashape.EMesh</code> and change the line <code>o.CubeMap.Tex = \"special\\\\dziedz_d_obrucona\"</code> to <code>o.CubeMap.Tex = \"special\\\\scene1_cubemap\"</code> without extension.</p> </li> <li> <p>Open the game or PainEditor and check the teleport on DM_Sacred_cubemap_test</p> </li> </ul> <p> Cubemap example </p> </li> </ol>"},{"location":"guides/modding/cubemaps/#example-2","title":"Example 2","text":"<p>Let's make a Quake 1 like teleport for Painkiller.</p> <ol> <li> <p>Download Space Skybox Generator.</p> </li> <li> <p>Generate a skybox with 512x512 pictures using Space Skybox Generator. It will generate 6 images into the Export folder.</p> </li> <li> <p>Assemble the skybox like it was previously described.</p> </li> <li> <p>Apply it to DM_Sacred_cubemap_test.</p> <p> Space cubemap example </p> </li> </ol>"},{"location":"guides/modding/cubemaps/#painkiller-cubemap-shaders","title":"Painkiller cubemap shaders","text":"<p>Painkiller cubemap shaders for teleports work in a way that cubemap will always face the direction you generated it for. It means that various teleports in various positions will see different cubemap sides of the same cubemap. Look at it as if cubemap is around the whole level and not just inside the teleport.</p> <p> Cubemap faces </p> <p>Thus, sometimes you will have to rename, rotate, and flip the cubemap layers to see the desired image side. In GIMP, Layer -&gt; Transform menu.</p> <p>Example when you need to rotate the cube through 180 degree. Use these parameters:</p> <p>Note</p> <p>X+ left; X- right; Y+ top (rotate by 180 degree); Y- bottom (rotate by 180 degree); Z+ back; Z- front</p> <p>The result:</p> <p> Cubemap rotated </p>"},{"location":"guides/modding/cubemaps/#free-skyboxes","title":"Free skyboxes","text":"<p>https://www.humus.name/index.php?page=Textures&amp;start=0</p> <p>https://github.com/sheraadams/OpenGL-Skyboxes-and-Photoshop-tutorial/tree/main/Skyboxes</p> <p>https://www.slipseer.com/index.php?resources/makkon-skyboxes.139/</p> <p>https://lvlworld.com/download/id:2023</p> <p>AI skyboxes, when you try to download a skybox from blockadelabs which is not fee, it'll allow you to download a free sample pack:</p> <p>https://skybox.blockadelabs.com/</p>"},{"location":"guides/modding/cubemaps/#references","title":"References","text":"<p>https://www.reddit.com/r/opengl/comments/18zfenj/best_place_to_get_realistic_space_skybox_textures/</p> <p>https://jaxry.github.io/panorama-to-cubemap/</p> <p>https://mikletuapse.itch.io/space-skybox-generator</p> <p>http://alexcpeterson.com/spacescape/</p> <p>https://www.nutty.ca/webgl/skygen/</p> <p>https://docs.unity3d.com/Manual/class-Cubemap-create.html</p> <p>http://www.c-jump.com/bcc/common/Talk3/OpenGL/Wk13_skybox/Wk13_skybox.html</p> <p>http://www.3dcpptutorials.sk/index.php?id=24</p> <p>https://www.ogldev.org/www/tutorial25/tutorial25.html</p> <p>https://www.khronos.org/opengl/wiki/Cubemap_Texture</p> <p>https://learnopengl.com/Advanced-OpenGL/Cubemaps</p>"},{"location":"guides/modding/mpk-specification/","title":"Painkiller MPK map geometry format specification","text":"<p>This specification was written by Maxim aka dilettante and was used as a basis for Painkiller 3ds Max plugins.</p> <p>Specification</p>"},{"location":"guides/modding/pk-packages/","title":"Unpack and Pack Painkiller/Necrovision game resources","text":"<p>Painkiller has two types of package formats: .pak and .pkm.</p> <p>These are basically the same types of archives with the difference that .pkm files are loaded by the game automatically during start and .pak must be registered for the game to load.</p> <p>Custom multiplayer maps are usually packed with the .pkm extension.</p> <p>Notes</p> <p>Don't confuse .pkm archive format with the .mpk geometry binary file. </p> <p>The geometry .mpk file can be opened in 3D graphics software like Autodesk 3ds Max, Maya, and Blender using unofficial plugins.</p>"},{"location":"guides/modding/pk-packages/#tools-to-unpack-painkillernecrovision-game-resources","title":"Tools to unpack Painkiller/Necrovision game resources","text":"<ul> <li>Built-in game tools using FS.ExtractPack (the most recommended option)</li> <li>Painkiller standard editor PainEditor (it can extract .pkm maps partially but is not recommended for this purpose)</li> <li>PainFull Extractor program (outdated; no source code)</li> <li>PainKillerExtractor program (outdated; source code available)</li> <li>Dragon UnPACKer (open source)</li> <li>QuickBMS (open source)</li> </ul>"},{"location":"guides/modding/pk-packages/#tools-to-unpack-painkiller-retail-demo-alpha-resources","title":"Tools to unpack Painkiller Retail Demo (Alpha) resources","text":"<ul> <li>pak2zip program</li> <li>QuickBMS (open source)</li> </ul>"},{"location":"guides/modding/pk-packages/#tools-to-pack-painkillernecrovision-game-resources-back","title":"Tools to pack Painkiller/Necrovision game resources back","text":"<ul> <li>Built-in game tools using FS.CreatePack (recommended option for .pak archives and .pkm maps with custom resources)</li> <li>Painkiller standard editor PainEditor (recommended option for maps .pkm files that do NOT contain custom resources, like additional scripts, textures in custom folders)</li> <li>PainFull Extractor can add and replace files in a package (not recommended).</li> <li>QuickBMS can re-import files to a package (not recommended).</li> </ul>"},{"location":"guides/modding/pk-packages/#built-in-game-tools","title":"Built-in game tools","text":"<p>People Can Fly video game development studio provided tools for unpacking and packing resources.</p> <p>Notes</p> <p>This is the most reliable and recommended way to pack and unpack Painkiller resources. I also recommend using PainEditor to package map .pkm archives.</p>"},{"location":"guides/modding/pk-packages/#unpack","title":"Unpack","text":"<p>Unpack files from <code>.pak</code> or <code>.pkm</code> archive via CLI:</p> <p>Powershell (can accept relative path to the output file):</p> <pre><code>.\\painkiller.exe -script FS.ExtractPack\"('../Data/DM_Test.pkm','../../Test')\"\n</code></pre> <p>Windows cmd (need to indicate full path to the output file):</p> <pre><code>.\\painkiller.exe -script FS.ExtractPack('../Data/DM_Test.pkm','C:/Users/%USERNAME%/FullPath/Games/Painkiller/Test')\n</code></pre>"},{"location":"guides/modding/pk-packages/#pack","title":"Pack","text":"<p>Note</p> <p>It is recommended to pack a map with the regenerated /Maps/MOPPCode. It regenerates automatically when you load a map in the game.</p> <p>To pack files back to the <code>.pak</code> or <code>.pkm</code> archive via CLI:</p> <p><code>true</code> is for compression.</p> <p>Powershell (can accept relative path to the input file):</p> <pre><code>.\\painkiller.exe -script FS.CreatePack\"('../Data/DM_Test.pkm','../../Test',true)\"\n</code></pre> <p>Windows cmd (need to indicate full path to the input file):</p> <pre><code>.\\painkiller.exe -script FS.CreatePack('../Data/MyPack.pkm','path/to/files/',true)\n</code></pre>"},{"location":"guides/modding/pk-packages/#paineditor-default-painkiller-editor","title":"PainEditor (default Painkiller Editor)","text":"<p>PainEditor comes with the Painkiller game. It's located in ..\\Painkiller\\Bin\\Editor.</p>"},{"location":"guides/modding/pk-packages/#export-all-game-data","title":"Export all game data","text":"<p>Warning</p> <p>This method will hang your PainEditor for several minutes and extract all files from all .pak archives to the current folders in the ..\\Data directory.</p> <p>To export all game data resources, click File -&gt; Extract Game Data.</p>"},{"location":"guides/modding/pk-packages/#export-a-map","title":"Export a map","text":"<p>Warning</p> <p>PainEditor does not extract some map resources and ..\\Data\\Levels\\MapEntities with this method. MapEntities usually include cubemaps for portals and water shaders. Moreover, PainEditor will not extract other map resources, like the geometry .mpk file, Textures, level scripts for Singleplayer maps, etc. It was a common mistake in the past that many mappers did not include portal textures on their maps because of that. Thus, be aware to copy those manually if needed or extract all map resources using a different method. So, generally, it is not recommended to extract maps and resources with PainEditor.</p> <p>To export a map with the editor, follow these steps:</p> <ul> <li>Click on File -&gt; Load Level and choose the level you'd like to export.</li> <li>Once the level is opened, click File -&gt; Save Level and Objects</li> </ul> <p>After that, the extracted map files will appear in the ..\\Data\\Levels directory.</p> <p> PainEditor </p>"},{"location":"guides/modding/pk-packages/#pack-a-map-to-pkm","title":"Pack a map to .pkm","text":"<ul> <li>Place all your map resources into the ..\\Painkiller\\Data\\ directory.</li> <li>Open your map in the editor by clicking on File -&gt; Load Level so that the game generates sort of a cache MOPPCode (memory-optimized partial polytope) in the ..\\Painkiller\\Data\\Maps\\MOPPCode\\ directory.</li> <li>Then save the map by clicking on File -&gt; Load Level, click on the Level you want to pack and click Create PMK.</li> </ul> <p>It will create a .pkm file inside the ..\\Painkiller\\Data\\ directory.</p> <p> PainEditor </p>"},{"location":"guides/modding/pk-packages/#painfull-extractor","title":"PainFull Extractor","text":"<p> PainFull Extractor </p> <p>PainFull Extractor was released in 2004 as a side project of MultiEx Commander by Mike Zuurman aka Mr.Mouse/XeNTaX. Latest Version 1.3.2.</p> <p>This unpacker supports .pak and .pkm archives but cannot unpack some archives with zero-byte files in ..\\Painkiller\\Data\\Maps\\MOPPCode\\ which is common in Painkiller Resurrection. Also, it has several annoying bugs like errors during the folder navigation, instability. This program is considered outdated but it's still widely used.</p> <p>You can get the program here.</p> <p>You need to run PainFull Extractor in a Windows XP compatibility mode as administrator.</p>"},{"location":"guides/modding/pk-packages/#painfull-extractor-guide","title":"PainFull Extractor Guide","text":"<p>Taken from the official <code>readme.txt</code> manual.</p> <p>Just browse to a PAK file of your choice at the left side of the tool, select it in the file list, and hit Open Painkiller PAK. You will notice the contents (entries) listed to the right.</p> <ul> <li> <p>Extraction</p> <p>Just select all files at once, clicking on the top file first followed by a click on the last while holding down the <code>shift</code> button. Alternatively just select the files you want, by holding <code>ctrl</code>.</p> <p>To extract, click the button below and in between the two lists, with <code>&lt;&lt;</code> on it. Voila. It will extract the files into the current path.</p> </li> <li> <p>Addition</p> </li> <li> <p>Replacement</p> <p>Select a file in the file list that you want to use to replace a file in the open archive. Second, select the file you wish to replace in the contents list. Click the <code>&gt;&gt;</code> button, and wait until it's finished. Done.</p> <p>Warning</p> <p>PainFull will automatically import the new file, and will NOT create a backup. If you want to mess around with any PAK file, be sure to back it up first and store it somewhere safe!</p> </li> </ul>"},{"location":"guides/modding/pk-packages/#painkillerextractor","title":"PainKillerExtractor","text":"<p>PainKillerExtractor was released in 2004 by Andrew Frolov aka FAL.</p> <p>The tool and the source code itself are located in this repository. This unpacker sometimes fails to extract correctly from an archive but it should be OK for modifying multiplayer maps. The tool basically consists of the <code>PainKillerExtractor.exe</code> file and everything else is a source code.</p>"},{"location":"guides/modding/pk-packages/#painkillerextractor-and-pak2zip-guide","title":"PainKillerExtractor and pak2zip Guide","text":"<p>Note</p> <p>Be sure to place <code>PainKillerExtractor.exe</code> with the file you want to extract in a separate folder so that the extraction will not mess the files in your current folder.</p> <p><code>pak2zip</code> is a similar tool but it's for Painkiller Exclusive Retail Demo <code>.pak</code> resources.</p> <ul> <li> <p>Unpacking by drag-and-drop</p> <p>You can simply drag and drop the .pak or .pkm archive to this application (drag the .pak archive with the mouse cursor to the .exe file) and it will unpack the resources automatically.</p> <p> PainKillerExtractor </p> </li> <li> <p>Unpacking via CLI</p> <pre><code>.\\PainKillerExtractor.exe PKPlus.pak\n</code></pre> <pre><code>.\\pak2zip.exe Textures.pak\n</code></pre> </li> </ul>"},{"location":"guides/modding/pk-packages/#dragon-unpacker","title":"Dragon UnPACKer","text":"<p>Dragon UnPACKer is an open-source tool for unpacking game resources. Currently, it supports Painkiller .pak files but cannot unpack .pkm by default. To unpack .pkm files with Dragon UnPACKer you need to temporarily rename .pkm file to .pak. For example, rename <code>DM_Blink.pkm</code> to <code>DM_Blink.pak</code> and Dragon UnPACKer will allow you to extract <code>DM_Blink.pak</code> resource in this case. Sometimes this program can break files during extraction but it's a very good program to browse in-game packed resources.</p> <p> Dragon UnPACKer </p>"},{"location":"guides/modding/pk-packages/#quickbms","title":"QuickBMS","text":"<p>QuickBMS is an open-source tool for unpacking game resources. QuickBMS is a complex tool with a lot of capabilities so I'll cover it briefly. If you want more details, read their manual in the <code>quickbms.txt</code> file.</p>"},{"location":"guides/modding/pk-packages/#start-with-quickbms","title":"Start with QuickBMS","text":"<ul> <li>Download the program from the website.</li> <li>Extract the QuickBMS archive.</li> <li>QuickBMS uses plugins to extract game resources and we'll need to download one. Go to BMS Search on their website and search using Necrovision or Painkiller keywords. Download the <code>bms/necrovision.bms</code> script and put it in the QuickBMS folder.</li> </ul> <p>Note</p> <p>If you are going to extract the Painkiller Exclusive Retail Demo resources, you need a QuickBMS plugin called <code>bms/zip2.bms</code>.</p> <p> QuickBMS plugin </p>"},{"location":"guides/modding/pk-packages/#unpack-game-archive","title":"Unpack game archive","text":"<ul> <li>Run <code>quickbms.exe</code> as an administrator.</li> <li>Select the <code>necrovision.bms</code> plugin for Painkiller/Necrovision resources or <code>zip2.bms</code> for Painkiller Exclusive Retail Demo resources.</li> <li>Choose .pak or .pkm file to extract. You can also select all the archives in the folder to be unpacked by indicating asterisk (<code>*</code>) as a File name or use regex.</li> <li>Choose the folder where to extract</li> </ul>"},{"location":"guides/modding/pk-packages/#reimport-to-game-archive","title":"Reimport to game archive","text":"<p>The idea consists of being able to reimport (\"injecting back\") the modified files in the original archives. Though, I don't recommend using this option.</p> <ul> <li>Make a backup copy of the original archive.</li> <li>Extract the files or only the ones that will be necessary for modification.</li> <li>Modify the extracted files leaving their size unchanged or smaller than before.</li> <li>Reimport the files in the archive via <code>reimport.bat</code> or <code>reimport2.bat</code> if the former gives errors. Administrator mode is not required.</li> <li>Open <code>reimport.bat</code> and select <code>necrovision.bms</code> plugin.</li> <li>Select the .pak or .pkm archive where you are going to import a modified file to.</li> <li>Select extracted modified files in a folder. You can use regex to select multiple files and folders and click Save.</li> </ul>"},{"location":"guides/modding/pk-packages/#work-with-files-via-cli","title":"Work with files via CLI","text":"<p>Read the manual for more options.</p> <p>Help command:</p> <pre><code>.\\quickbms.exe -h\n</code></pre> <p>List files in an archive without unpacking:</p> <pre><code>.\\quickbms.exe -l necrovision.bms .\\DM_5quid01.pkm\n</code></pre> <p>Extract files. It will prompt you to create a folder if does not exist:</p> <pre><code>.\\quickbms.exe necrovision.bms .\\DM_5quid01.pkm .\\DM_5quid01\n</code></pre> <p>Reimport files from the output folder:</p> <pre><code>.\\quickbms.exe -w -r necrovision.bms .\\DM_5quid01.pak .\\DM_5quid01\n</code></pre> <p>Use advanced reimport if the usual one does not work:</p> <pre><code>.\\quickbms.exe -w -r -r necrovision.bms .\\DM_5quid01.pak .\\DM_5quid01\n</code></pre>"},{"location":"guides/modding/q1-maps-to-pk/","title":"Port Quake 1 maps to Painkiller","text":"<p>Note</p> <p>Don't forget to install the Blender MPK plugins first.</p> <p>Quake 1 has a pretty big roster of high quality custom singleplayer and multiplayer maps. First community attempts to port Quake 1 maps were right after the Painkiller release reference.</p> <p>Nowadays, we have amazing Blender Quake 1 plugins that solve a lot of conversion issues.</p> <p> Quake 1 map Tears of the False God by Bal (ad_tears.bsp) from Arcane Dimensions mod </p> <p>Warning</p> <p>I recommned contacting the original Quake 1 map owners before porting a Quake 1 map to Painkiller. The mappers are usually around in the Quake 1 discord channels.</p>"},{"location":"guides/modding/q1-maps-to-pk/#configure-quake-1","title":"Configure Quake 1","text":"<p>Note</p> <p>Quake 1 and Quake World is basically the same game. Quake World is a multiplayer update for Quake 1. If you hear Quake World references it usually means Quake 1 multiplayer.</p> <p>It's not mandatory to have a full Quake 1 game to work with its maps. However, I higly recommend a full game with all the sounds and music so that you were able to completely immerse in a map that you are going to port.</p> <ol> <li> <p>Purchase the game on Steam or GOG.</p> </li> <li> <p>Install Ironwail or vkQuake.</p> </li> <li> <p>Configure music</p> </li> </ol> <p>Alternatively, you can download nQuake which is based on the shareware Quake 1 and only focused on multiplayer. That version does not have map sounds and does not support music.</p> <p>Custom maps are installed in <code>..\\Quake 1\\ID1\\maps</code>. Custom skybox textures (mosly Makkon skyboxes are required) are intalled into <code>..\\Quake 1\\ID1\\gfx\\env</code>.</p>"},{"location":"guides/modding/q1-maps-to-pk/#introduction","title":"Introduction","text":"<p>Quake 1 maps have two formats: <code>MAP</code> and <code>BSP</code>.</p> <ul> <li> <p>MAP is a human readable text source saved from the Quake editor, like Trenchbroom. This format has the complete map geometry, clip brushes (invisible walls) information, and more. The map textures are shipped separately via the <code>.wad</code> files.</p> </li> <li> <p>BSP is a compiled map by the Quake compiler. A single BSP file contains the map itself, its textures, and a lightmap. The geometry in BSP is cut and cleaned by the compiler, all the unnecessary parts are removed. BSP files can be read by the Quake 1 BSP Editor.</p> </li> </ul> <p>It's rare to find map sources in a <code>MAP</code> format with its accompanied <code>WAD</code> texture file. Most Quake 1 maps on the intertnet can be found in the compiled <code>BSP</code> format. From the map porting perspective, BSP is what we really need. It has relatively clean geometry and all the resources within the BSP file. However, as mentioned above, the MAP format has more information which BSP decompilers can't retrieve, like invisible walls aka clip brushes so, ideally, it's better to have BSP alongside with MAP. Otherwise, you'll have to throughly check the map gameplay in Quake before porting.</p> <p>Another issue, regardless of MAP or BSP, Quake 1 maps are created with brushes. Simply put, a brush is a cube. When you check a Quake 1 map in a 3D editor within the \"Edit\" mode, you'll notice that it has a lot of unnecessary verticies, edges, and polygons. Each vertex will create an additional triangle. All of these are not very good for PainEngine and can cause FPS drops so it's necessary to clean the geometry as much as possible and optimize a map using PainEngine zones, portals, and anyps.</p> <p>It is necessary to mention that Quake 1 maps use a lot of moving objects, like traps, lifts, moving platforms which Painkiller is missing. You will have to use some workarounds to make those work in Painkiller. </p> <p>Apart from that, Quake 1 uses various animated textures with special characters in the beginning. Painkiller has shaders which can animate textures so you will need to rework some object materials to fit for Painkiller. You will also need to remove the special characters from the texture naming or they won't work in Painkiller.</p>"},{"location":"guides/modding/q1-maps-to-pk/#map-archives","title":"Map archives","text":"<p>Quaddicted singleplayer and multiplayer map archive</p> <p>Quaddicted Files</p> <p>Slipseer singleplayer maps</p> <p>Quake 1 MAP sources released by John Romero</p> <p>Quakeworld NU recommended multiplayer maps</p> <p>Quakeworld NU multiplayer map archive</p> <p>Project Q1Q3</p> <p>QRack multiplayer map archive</p>"},{"location":"guides/modding/q1-maps-to-pk/#bsp-and-wad-texture-export","title":"BSP and WAD texture export","text":"<p>Note</p> <p>PainEngine only supports bmp, tga, dds images.</p> <p>The recommended tool for exporting textures from Quake Wad and BSP files is TexMex.</p> <ol> <li> <p>Open a Quake 1 WAD or a BSP file file.</p> <p> Quake 1 BSP texmex </p> </li> <li> <p>Click <code>File</code> -&gt; <code>Export</code> and choose <code>Tga24</code> which is more compressed or <code>Bmp</code>.</p> </li> <li> <p>Copy the textures that have special symbols in them, like in '*lava1', and rename them without special characters like in 'lava1'.</p> </li> <li> <p>Replace textures with the same name from the HD restoration project. These are the high quality textures that are faithful to the original. Alternatively, you can try Makkon texture pack or even replace them with the original Painkiller textures.</p> </li> </ol>"},{"location":"guides/modding/q1-maps-to-pk/#bsp-import","title":"BSP Import","text":"<p>BSP Import is the preferable way of working with Quake 1 maps.</p> <p>The textures are already packed within BSP so you don't need to use additional folder for textures.</p> <p>Warning</p> <p>Some custom Quake 1 maps that use increased limits and new versions of BSP cannot be open by the plugin.</p> <p>Note</p> <p>The BSP plugins below have Quake 1 lightmap support; however, this functionality is bugged and the lightmap coordinates are broken. The developers made this lighmap feature disabled and hidden by default. Let's see if they fix this feature in the future updates. As of now, the maps can only be exported without lightmaps and you'll have to generate ones youself.</p> <ol> <li> <p>Install one of these Blender plugins or you can even install them both. I find both of them great with its pros and cons:</p> <ul> <li>Quake 1 BSP importer by joshuaskelly</li> <li>Quake 1 BSP importer by andyp123</li> </ul> </li> <li> <p>Once you installed and enabled the plugin in the Blender preferences, go to <code>File</code> -&gt; <code>Import</code> -&gt; <code>Quake BSP (.bsp)</code>.</p> </li> <li> <p>The map is imported as one <code>worldspawn</code> object. You will notice that the importer also adds some redundant map information, like lighting, spawn points, triggers. Examine them and don't forget to remove those from your final map version.</p> <p> Quake 1 map import </p> </li> <li> <p>Go to the <code>Edit</code> mode (Tab) and separate the geometry by materials: press <code>P</code> -&gt; <code>By Material</code>. You'll need to separate because it's not good for the PainEngine to load such a big map object altogether. There should be a ballance between the quantity of the objects and a number of triangles. From the PainEngine official documentation: \"Single mesh can have up to 20000 triangles. Whole level scene can have up to 4096 objects but it is reasonable to keep no more than a couple of hundred objects.\" Here is the example of how I separated the map objects on \"amphi2\":</p> <p> Quake 1 object separation </p> </li> <li> <p>Go back to the object mode and select all the meshes that were separated by material. Enter the Edit mode again, select all <code>A</code>, click <code>M</code> -&gt; <code>By Distance</code> (Merge distance 0.0001 m) to merge the verticies, then <code>X</code> -&gt; <code>Limited Dissolve</code> to clean the meshes from the unnecessary verticies and edges. This is recommended for the engine and it also improves texturing and object shading. This should be done after the separation by material and vertex merge. It requires you to have experience with Blender because features as vertex merge, limited dissolve, snap utility can be very destructive and requires high attention. Always enable statistics to see how the result was improved. Examine thoroughly all the meshes in the edit mode after such operations, delete manually remained unnecessary verticies and edges. Check the difference on the examples below, the geometry before and after the cleaning; I removed about 75% of redundant verticies on such a small map:</p> <p> Quake 1 geometry before cleaning </p> <p> Quake 1 geometry after cleaning </p> </li> <li> <p>Once you cleaned the geometry, you need to fix the texture coordinates (unwrapping) on all the modified objects:</p> <p> Quake 1 texturing </p> </li> <li> <p>Go to the Object mode and fix the shading for all the map objects. Select them all, click the right mouse button and choose \"Shade Auto Smooth\" by 30 or 45 degree. For terrain and statues, I prefer 60 degree but it's a matter of preference and how it looks in the editor.</p> </li> <li> <p>Go to the material properties where the textures have a special character. Replace it with the texture without a special character in its name, the one you made before if you followed this tutorial: </p> <p> Quake 1 texturing </p> </li> <li> <p>Change some objects like water, lava, acid according to how it's done in Painkiller maps. It's possible to change a lava texture but you need to follow a pattern. For example, a lava object on DM_Fallen1 looks this way (mind the grid, texturing, and mesh properties in Blender and in the MapEntities in CLevel) and you can import it with its material right in a Quake 1 map port:</p> <p> DM_Fallen1 lava </p> </li> <li> <p>Remove \"fake\" sky on the map. Quake 1 maps are always enclosed rooms with or without skyboxes. Painkiller uses skydomes and this is a different technology so you need to remove the Quake 1 boxes with animated sky textures from the map, if they are present to improve the visuals. Check the difference between a map with the \"fake\" sky and after its removal and the ported map \"skull\":</p> <p> Map Skull with the Quake 1 fake sky </p> <p> Map Skull with the removed Quake 1 fake sky and added Painkiller skydome </p> </li> <li> <p>Add Painkiller barriers, ladder zones, steps with additional barriers, optimize the map for Painkiller movement.</p> </li> <li> <p>Add zones, portals, antyp to optimize the map performance.</p> </li> <li> <p>Find solutions to Quake 1 lifts, planforms, traps using Painkiller DAT objects and scripts. Modify or remove some Quake 1 objects that do not work in Painkiller.</p> </li> <li> <p>Export the MPK file with the Blender Painkiller plugins and check the map in PainEditor. It's high likely, you will need to scale the map with <code>o.Scale</code> in CLevel (<code>o.Scale = 0.3</code> is default in Painkiller). Thoroughly check if there are any map holes, amend them with the Blender snap tool.</p> </li> <li> <p>When the map is ready, generate lightmaps with the Blender Lightmapper addon.</p> </li> </ol>"},{"location":"guides/modding/q1-maps-to-pk/#map-format-import-and-export","title":"Map format import and export","text":"<p>In case you need to work with the Quake 1 <code>.map</code> file, there are 2 Blender plugins:</p> <p>Quake MAP File Importer by andyp123</p> <p>MAP File Exporter</p>"},{"location":"guides/modding/q1-maps-to-pk/#wrl-import","title":"WRL Import","text":"<p>It's a rare case, most likely you won't need this. The BSP file can be converted to WRL using bsp2wrl then it can be imported with the Web3D X3D/VRML2 format Blender addon.</p>"},{"location":"guides/modding/q1-maps-to-pk/#noesis","title":"Noesis","text":"<p>A couple of words of Noesis, it's a good program, can import Quake 1 BSP files with lightmaps. However, I was not satisfied with the result of how it exported a map via FBX format. The map looked quite broken in Blender after Noesis.</p>"},{"location":"guides/modding/q1-maps-to-pk/#additional-links","title":"Additional links","text":"<p>https://github.com/ericwa/ericw-tools</p>"},{"location":"guides/modding/q1-maps-to-pk/#quake-1-discord-channels","title":"Quake 1 discord channels","text":"<p>https://discord.gg/quake-world-166866762787192833</p> <p>https://discord.gg/WkBX6NG5Ym</p> <p>https://discord.gg/SWrfsYJqsu</p> <p>https://discord.gg/sxEVGWBFzJ</p>"},{"location":"guides/multiplayer/command-options/","title":"Painkiller Command Line Options","text":"<p>The information was taken from pkeuro and updated.</p>"},{"location":"guides/multiplayer/command-options/#plus-parameters","title":"Plus parameters","text":"<pre><code>+connect [xx.xx.xx.xx]\n+playrecording [demo name]\n+dedicatedserver\n+private\n+name [player name]\n+map [map name]\n+interface [xx.xx.xx.xx]\n+speed [0,1,2,3]\n+port [xxxx]\n+maxfps [xx]\n+password [xxxxxx]\n+hwclass [tnl, nv20, nv25, r200, nv30, nv40]\n</code></pre>"},{"location":"guides/multiplayer/command-options/#description","title":"Description","text":"<p><code>+connect</code> is used to connect to a server as soon as you launch the game. <code>+playrecording</code> is supposed to play a demo when you launch the game. <code>+dedicatedserver</code> launches a dedicated server. It is the same as <code>-dedicated</code>. The Linux <code>pkserver</code> binary already has the <code>+dedicatedserver</code> parameter enabled by default when you launch it. <code>+private</code> makes the server not be seen on GameSpy/OpenSpy. <code>+name</code> sets the player's name when you connect to the server. <code>+map</code> sets a server map as you launch the game. This parameter is absent in the <code>pkserver</code> binary. <code>+interface</code> is a very important parameter. You indicate an IP of the interface which has access to the Internet. <code>+speed</code> is your connection speed: 0=modem, 1=ISDN, 2=Cable/ADSL, 3=LAN/T1. <code>+port</code> runs a multiplayer game on a specific port (default 3455). <code>+maxfps</code> limits max FPS in multiplayer (default 125). FPS affects the physics of the game. <code>+password</code> sets the server password. <code>+hwclass</code> is a hardware class. This parameter configures the quality of the game shaders. For example, <code>tnl</code> will load shaders of lower quality.</p> <p>Note</p> <p>Most of the parameters only work with the Windows binary.</p> <p>The official <code>pkserver</code> Linux binary automatically runs with the hardcoded <code>+dedicatedserver +map +port</code> parameters. It seems that it can only accept <code>+interface</code> and <code>+private</code> parameters. Everything else should be set in the <code>config.ini</code> file.</p>"},{"location":"guides/multiplayer/command-options/#dash-parameters","title":"Dash parameters","text":"<p>Additional commands for the Windows binary. These commands do not work with the official Linux <code>pkserver</code> binary:</p> <pre><code>-start\n-dedicated\n-cfg [config name; example, config.ini]\n-script [example, FS.ExtractPack('')]\n-lscripts [pak with scripts; example, LScripts.pak]\n-profile [user]\n-game editorgame\n</code></pre>"},{"location":"guides/multiplayer/command-options/#description_1","title":"Description","text":"<p><code>-start</code> immediately starts a multiplayer match when you run a dedicated server. <code>-dedicated</code> launches a dedicated server. It is the same as <code>+dedicatedserver</code> but only works on Windows. <code>-cfg</code> sets a name for a custom <code>config.ini</code> file. That's where the server configuration is stored. Put the custom file into the game's <code>Bin</code> directory or indicate a relative path to it. <code>-script</code> is a helper tool to run some embedded scripts via the painkiller binary. For example, you can pack and extract the <code>.pak</code> archives. <code>-lscripts</code> sets the path to custom game scripts. <code>-profile</code> is the Windows user profile. <code>-game editorgame</code> is leftover from the alpha version of Painkiller. It does nothing.</p>"},{"location":"guides/multiplayer/gamespy-openspy/","title":"Replace GameSpy with OpenSpy","text":"<p>Since GameSpy master servers were shut down in 2013, the OpenSpy community worked on supporting games dependent on GameSpy master servers. Painkiller and Painkiller Overdose are supported by OpenSpy.</p> <p>GameSpy (now OpenSpy) is required to advertise your game server online. This will allow players to see your server in their in-game browser and join it without knowing its IP address and port. Otherwise, you would have to type in the IP and port manually in the game to join a server and add it to <code>Favourites</code> for convenience.</p> <p>There are two ways to make the game understand the transition from GameSpy to OpenSpy:</p> <ul> <li>Modify game DLL files and Painkiller Linux <code>pkserver</code> binary.</li> <li>Modify the <code>hosts</code> file (not recommended).</li> </ul> <p>Warning</p> <p>Modifying DLL files is the recommended way since IP addresses are subject to change. This change should be done on both the server and the client side.</p>"},{"location":"guides/multiplayer/gamespy-openspy/#modify-dll-files-and-painkiller-linux-pkserver-binary","title":"Modify DLL files and Painkiller Linux <code>pkserver</code> binary","text":"<p>If you choose this method, you don't need to add anything to the <code>hosts</code> file.</p> <p>There is a prepared patch for Painkiller and Overdose. Just replace the DLL's in your game folder.</p> <p>Alternatively, you can use 4Gb RAM Memory patch by XDavidXtreme that already includes those changes. For Painkiller, for Overdose. Replace all the files when installing the 4Gb RAM Memory patch.</p> <p>Unnoficial Overdose patches made by XDavidXtreme also contain OpenSpy fixes.</p> <p>If you want to modify the files manually, follow the steps below. Here is the guide but it is general and is not a perfect fit for Painkiller.</p> <p>GameSpy is mentioned in the following files:</p> <ul> <li>Painkiller</li> </ul> <pre><code>..\\Painkiller\\Bin\\Engine.dll\n..\\Painkiller\\Bin\\Editor\\Engine.dll\n</code></pre> <ul> <li>Painkiller Linux Dedicated Server</li> </ul> <pre><code>../pkserver/Bin/pkserver\n</code></pre> <ul> <li>Painkiller Overdose</li> </ul> <pre><code>..\\Overdose\\Bin\\OverdoseEngine.dll\n..\\Overdose\\Bin\\OverdoseEngineEditor.dll\n..\\Overdose\\Bin\\OverdoseEngineServer.dll\n</code></pre> <p>Note</p> <p>You don't really need any Hex editor to modify those DLL files. Nonetheless, you need an editor that supports various encodings like Notepad++. Standard Windows Notepad is not suitable for this purpose. Use Hex editors otherwise.</p> <p>Open the DLL file or the <code>pkserver</code> Linux binary with Notepad++ and replace all instances of gamespy.com with openspy.net. Save the file.</p> <p>Make sure the size of DLL's should not have changed. If it's changed, it means that the encoding was not interpreted correctly by the editor. In this case, you can try using the <code>HEX-Editor</code> plugin for Notepad++ or another Hex editor program.</p>"},{"location":"guides/multiplayer/gamespy-openspy/#hosts-file","title":"Hosts file","text":"<p>Warning</p> <p>This is an outdated and not recommended way of determining OpenSpy servers.</p> <p>The location of the <code>hosts</code> file:</p> <ul> <li>Windows - <code>C:\\Windows\\System32\\drivers\\etc\\hosts</code></li> <li>Linux - <code>/etc/hosts</code></li> </ul> <p>We need to redirect GameSpy hostnames to OpenSpy IP addresses. Add the following lines to the <code>hosts</code> file.</p> <p>Warning</p> <p>IP addresses are subject to change. If you want to know the current OpenSpy IP's, you need to ping or dig each of the below subdomains within the openspy.net domain. For example:</p> <pre><code>dig painkiller.master.openspy.net +short\nserver1.openspy.net.\n134.122.16.249\n</code></pre> <ul> <li>For Painkiller (<code>painkiller</code> subdomain):</li> </ul> <pre><code>134.122.16.249 painkiller.master.gamespy.com\n134.122.16.249 painkiller.available.gamespy.com\n134.122.16.249 painkiller.ms0.gamespy.com\n134.122.16.249 painkiller.ms1.gamespy.com\n134.122.16.249 painkiller.ms2.gamespy.com\n134.122.16.249 painkiller.ms3.gamespy.com\n134.122.16.249 painkiller.ms4.gamespy.com\n134.122.16.249 painkiller.ms5.gamespy.com\n134.122.16.249 painkiller.ms6.gamespy.com\n134.122.16.249 painkiller.ms7.gamespy.com\n134.122.16.249 painkiller.ms8.gamespy.com\n134.122.16.249 painkiller.ms9.gamespy.com\n134.122.16.249 painkiller.ms10.gamespy.com\n134.122.16.249 painkiller.ms11.gamespy.com\n134.122.16.249 painkiller.ms12.gamespy.com\n134.122.16.249 painkiller.ms13.gamespy.com\n134.122.16.249 painkiller.ms14.gamespy.com\n134.122.16.249 painkiller.ms15.gamespy.com\n134.122.16.249 painkiller.ms16.gamespy.com\n134.122.16.249 painkiller.ms17.gamespy.com\n134.122.16.249 painkiller.ms18.gamespy.com\n134.122.16.249 painkiller.ms19.gamespy.com\n134.122.16.249 painkiller.ms20.gamespy.com\n167.99.14.87 painkiller.natneg1.gamespy.com\n157.230.90.177 painkiller.natneg2.gamespy.com\n134.122.16.249 painkiller.natneg3.gamespy.com\n167.99.14.87 motd.gamespy.com\n</code></pre> <ul> <li>For Painkiller Overdose (<code>painkillerod</code> subdomain):</li> </ul> <pre><code>134.122.16.249 painkillerod.master.gamespy.com\n134.122.16.249 painkillerod.available.gamespy.com\n134.122.16.249 painkillerod.ms0.gamespy.com\n134.122.16.249 painkillerod.ms1.gamespy.com\n134.122.16.249 painkillerod.ms2.gamespy.com\n134.122.16.249 painkillerod.ms3.gamespy.com\n134.122.16.249 painkillerod.ms4.gamespy.com\n134.122.16.249 painkillerod.ms5.gamespy.com\n134.122.16.249 painkillerod.ms6.gamespy.com\n134.122.16.249 painkillerod.ms7.gamespy.com\n134.122.16.249 painkillerod.ms8.gamespy.com\n134.122.16.249 painkillerod.ms9.gamespy.com\n134.122.16.249 painkillerod.ms10.gamespy.com\n134.122.16.249 painkillerod.ms11.gamespy.com\n134.122.16.249 painkillerod.ms12.gamespy.com\n134.122.16.249 painkillerod.ms13.gamespy.com\n134.122.16.249 painkillerod.ms14.gamespy.com\n134.122.16.249 painkillerod.ms15.gamespy.com\n134.122.16.249 painkillerod.ms16.gamespy.com\n134.122.16.249 painkillerod.ms17.gamespy.com\n134.122.16.249 painkillerod.ms18.gamespy.com\n134.122.16.249 painkillerod.ms19.gamespy.com\n134.122.16.249 painkillerod.ms20.gamespy.com\n167.99.14.87 painkillerod.natneg1.gamespy.com\n157.230.90.177 painkillerod.natneg2.gamespy.com\n134.122.16.249 painkillerod.natneg3.gamespy.com\n167.99.14.87 motd.gamespy.com\n</code></pre>"},{"location":"guides/multiplayer/od-firewall-config/","title":"Firewall Configuration for Painkiller Overdose Multiplayer Server","text":"<p>You may need to create the firewall inbound and outbound rules for the game via TCP and UDP protocols. Inbound rules are required so that the client can connect to your server while outbound rules are required for the Painkiller game to advertise its server to <code>openspy.net</code> master servers and send packets to the client properly. From my experience, I did not have to configure the OS firewall at all.</p> <p>Here is the scheme that shows where the firewall can filter the traffic.</p> <pre><code>flowchart BT\n  A{{Client}} --&gt;|50.153.139.143:3455| B[Router External IP];\n  B --&gt;|192.168.0.104:3455| C[OS Firewall];\n  C --&gt;|TCP, UDP| D{{Server Internal IP}};\n  D --&gt; E[OS Firewall];\n  E --&gt;|TCP, UDP| F[Router External IP];\n  F -.-&gt; A;\n  F -.-&gt; J([openspy.net]);\n  J -.-&gt; A;</code></pre> <p>The Painkiller Overdose game has 3 EXE files <code>Overdose.exe</code>, <code>OverdoseEditor.exe</code>, and <code>OverdoseServer.exe</code>. We will mostly use <code>Overdose.exe</code> for the dedicated server but it is desirable to create rules for all 3 of them since they all can be used to host a server.</p> <p>I'll describe the configuration of the Windows Defender Firewall only.</p>"},{"location":"guides/multiplayer/od-firewall-config/#windows-defender-firewall","title":"Windows Defender Firewall","text":"<p>The rule can be added manually but the quickest way is to add those Windows Defender Firewall rules via Powershell in the Administrator mode (change the path to your game directory):</p> <pre><code>$pkOverdosePath = \"C:\\Games\\Painkiller Overdose\\Overdose.exe\"\n$pkOverdoseEditorPath = \"C:\\Games\\Painkiller Overdose\\OverdoseEditor.exe\"\n$pkOverdoseServerPath = \"C:\\Games\\Painkiller Overdose\\OverdoseServer.exe\"\n</code></pre>"},{"location":"guides/multiplayer/od-firewall-config/#inbound-rules","title":"Inbound rules","text":"<pre><code>New-NetFirewallRule -Program \"$pkOverdosePath\" -DisplayName \"Painkiller Overdose TCP\" -Description \"Painkiller Overdose TCP\" -Protocol TCP -Direction Inbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdosePath\" -DisplayName \"Painkiller Overdose UDP\" -Description \"Painkiller Overdose UDP\" -Protocol UDP -Direction Inbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseEditorPath\" -DisplayName \"Painkiller Overdose Editor TCP\" -Description \"Painkiller Overdose Editor TCP\" -Protocol TCP -Direction Inbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseEditorPath\" -DisplayName \"Painkiller Overdose Editor UDP\" -Description \"Painkiller Overdose Editor UDP\" -Protocol UDP -Direction Inbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseServerPath\" -DisplayName \"Painkiller Overdose Console Server TCP\" -Description \"Painkiller Overdose Console Server TCP\" -Protocol TCP -Direction Inbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseServerPath\" -DisplayName \"Painkiller Overdose Console Server UDP\" -Description \"Painkiller Overdose Console Server UDP\" -Protocol UDP -Direction Inbound -Profile Public -Action Allow\n</code></pre>"},{"location":"guides/multiplayer/od-firewall-config/#outbound-rules","title":"Outbound rules","text":"<pre><code>New-NetFirewallRule -Program \"$pkOverdosePath\" -DisplayName \"Painkiller Overdose TCP\" -Description \"Painkiller Overdose TCP\" -Protocol TCP -Direction Outbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdosePath\" -DisplayName \"Painkiller Overdose UDP\" -Description \"Painkiller Overdose UDP\" -Protocol UDP -Direction Outbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseEditorPath\" -DisplayName \"Painkiller Overdose Editor TCP\" -Description \"Painkiller Overdose Editor TCP\" -Protocol TCP -Direction Outbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseEditorPath\" -DisplayName \"Painkiller Overdose Editor UDP\" -Description \"Painkiller Overdose Editor UDP\" -Protocol UDP -Direction Outbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseServerPath\" -DisplayName \"Painkiller Overdose Console Server TCP\" -Description \"Painkiller Overdose Console Server TCP\" -Protocol TCP -Direction Outbound -Profile Public -Action Allow\n</code></pre> <pre><code>New-NetFirewallRule -Program \"$pkOverdoseServerPath\" -DisplayName \"Painkiller Overdose Console Server UDP\" -Description \"Painkiller Overdose Console Server UDP\" -Protocol UDP -Direction Outbound -Profile Public -Action Allow\n</code></pre> <p>Go to <code>Control Panel\\System and Security\\Windows Defender Firewall</code> -&gt; <code>Advanced settings</code> to check the created rules.</p>"},{"location":"guides/multiplayer/od-mp-server-win/","title":"Setup Painkiller Overdose Windows server","text":"<p>Painkiller Overdose does not have an official Linux server so it's only possible to host a server on Windows. This is one of the reasons that no one hosts servers for this game nowadays.</p> <p>This guide will give you step-by-step instructions on how to set up the Painkiller Overdose Windows server and play with your friends.</p> <p>Here is a brief description of the game releases. The official international versions of the game were:</p> <ul> <li>66.2 Demo</li> <li>75.3</li> <li>84.4</li> </ul> <p>These are the only recommended versions to host your server.</p> <p>There also were several versions in-between 75.3 and 84.4 from the local publishers but the additional singleplayer and multiplayer game content was only introduced in 84.4.</p> <p>This unofficial version of the patch will upgrade your game to 84.4 from 75.3 and it already incorporates the Gamespy fix.</p> <p>It's also worth mentioning the competition multiplayer mod called PROverdose made by OriOn and PrimeviL which was intended to be similar to PK++ for the original Painkiller.</p>"},{"location":"guides/multiplayer/od-mp-server-win/#windows-server-setup","title":"Windows Server Setup","text":"<p>The server setup includes the following steps:</p> <ul> <li>Router configuration</li> <li>Windows Firewall configuration (optional)</li> <li>OpenSpy configuration</li> <li>Server launching</li> <li>PROverdose setup (optional)</li> <li>Custom Mappack (optional)</li> </ul>"},{"location":"guides/multiplayer/od-mp-server-win/#router-configuration","title":"Router configuration","text":"<p>If you use a router, you need to forward a port to the Overdose server. The game's default port is <code>4974</code> but you can change it to another one. I highly recommend reserving a local IP address for this purpose. Please refer to this guide for more information on the router configuration.</p> <p>I'll take the local IP <code>192.168.0.104</code> in further examples.</p>"},{"location":"guides/multiplayer/od-mp-server-win/#firewall-configuration","title":"Firewall configuration","text":"<p>This step is not always required. In my case, all worked without this configuration. However, you may need to create firewall inbound and outbound rules for the game via TCP and UDP protocols. Refer to this information for more details.</p>"},{"location":"guides/multiplayer/od-mp-server-win/#gamespy-to-openspy","title":"GameSpy to OpenSpy","text":"<p>GameSpy was a server browser for online games. A public game server could advertise its IP address to GameSpy master servers and all clients could see it in the browser list. GameSpy also checked the game CD key and prevented the clients with bogus keys from joining a server.</p> <p>GameSpy was shut down in 2013 and since then the community created its open-source clone OpenSpy.</p> <p>OpenSpy does not have any CD key checks during the online play. However, a game may have its own CD key validation. The international version of Painkiller Overdose did not have any CD key validations.</p> <p>To use OpenSpy, you can either replace all instances of gamespy.com with openspy.net in <code>OverdoseEngine.dll</code>, <code>OverdoseEngineEditor.dll</code>, <code>OverdoseEngineServer.dll</code> or modify the Windows <code>hosts</code> file.</p> <p>This guide will give you more detailed information on how to do it.</p>"},{"location":"guides/multiplayer/od-mp-server-win/#server-launching","title":"Server launching","text":"<p>There are several ways to run a public server:</p> <ul> <li>In-game public server</li> <li>Dedicated server</li> <li>Dedicated console server</li> </ul>"},{"location":"guides/multiplayer/od-mp-server-win/#in-game-public-server","title":"In-game public server","text":"<p>The important thing here is to run the game with the correct network interface.</p> <p>In the previous examples, I ran a server on <code>192.168.0.104</code> thus I need to pass this parameter to the game because it may try to run the game under a different interface.</p> <ol> <li> <p>Create a Windows shortcut or a BAT file in the <code>..\\Overdose\\Bin\\</code> directory with this content:</p> <pre><code>Overdose +interface 192.168.0.104\n</code></pre> <p>Additionally, for your convenience, copy <code>C:\\Users\\%USERNAME%\\AppData\\Local\\Painkiller Overdose\\Overdose.ini</code> to <code>..\\Overdose\\Bin\\</code> and rename it to <code>OverdoseServer.ini</code>. Add the following parameters:</p> <pre><code>Overdose +interface 192.168.0.104 -cfg OverdoseServer.ini\n</code></pre> <p>Warning</p> <p>Official Overdose versions have several bugs regarding the variable overriding with the <code>-cfg</code> parameter. If some modified parameters inside the .ini file do not work, run the server with the default <code>Overdose.ini</code> file:</p> <p><code>Overdose +interface 192.168.0.104</code></p> </li> <li> <p>Run the game via that file and select <code>Multiplayer</code> -&gt; <code>Start Game</code> -&gt; Tick <code>Public Server</code>, make the necessary configurations, and <code>Start</code> the public server.</p> <p> OD Public Server </p> <p>To check if the server is available publicly, minimize the game and after some time the server will be present on this page. It means that a client should be able to see it in his in-game server list provided they also made modifications regarding OpenSpy on their side.</p> </li> </ol>"},{"location":"guides/multiplayer/od-mp-server-win/#dedicated-server","title":"Dedicated server","text":"<p>It is similar to the steps above but we'll run a server via a different program.</p> <ol> <li> <p>For your convenience, copy <code>C:\\Users\\%USERNAME%\\AppData\\Local\\Painkiller Overdose\\Overdose.ini</code> to <code>..\\Overdose\\Bin\\</code> and rename it to <code>OverdoseServer.ini</code>.</p> <p>Let's modify <code>OverdoseServer.ini</code> and change WarmUpTime and MaxFpsMP:</p> <pre><code>Cfg.WarmUpTime = 0\nCfg.ServerFPS = 45\nCfg.MaxFpsMP = 125\n</code></pre> </li> <li> <p>Create a Windows shortcut or a BAT file in the <code>..\\Overdose\\Bin\\</code> directory with this content <code>OverdoseDedicated.bat</code>:</p> <pre><code>Overdose -dedicated -cfg OverdoseServer.ini\n</code></pre> <p>Warning</p> <p>Official Overdose versions have several bugs regarding the variable overriding with the <code>-cfg</code> parameter. If some modified parameters inside the .ini file do not work, run the server with the default <code>Overdose.ini</code> file:</p> <p><code>Overdose -dedicated</code></p> </li> <li> <p>Open the server via that file and select the <code>Network interface</code> to which you forwarded traffic from your router (<code>192.168.0.104</code> in my example); select the <code>Public(GameSpy)</code> mode. Make the necessary configurations and click <code>Start</code>.</p> <p> OD Dedicated Server </p> <p>After some time, the server should be present on this page</p> <p> OD OpenSpy List </p> </li> <li> <p>Clients should see your server and will be able to join provided they also made modifications regarding OpenSpy on their side. However, you will not be able to see your server on the in-game list or you'll see it as a broken server and if you try to join it, you'll get an error that this IP does not respond. It seems that the game was implemented in a way that a server can only be seen from a different external IP.</p> <p>So you need to type in manually in the game to join the server either via the internal IP address <code>192.168.0.104:4974</code>or via the external one <code>50.153.139.143:4974</code> and add to <code>Favourites</code> for your convenience.</p> <p> OD Favourites List </p> <p>Then you will be able to find your server on the <code>Favourites</code> tab and join it from there.</p> </li> <li> <p>As a server administrator, you can use all console commands via the <code>Painkiller Dedicated Server</code> GUI menu. Let's add a bot to the server session. Click the <code>Console</code> tab and type in the following command and hit <code>Enter</code>:</p> <pre><code>/addbot\n</code></pre> <p> OD Dedicated Server Console </p> <p>You will not be able to use all console commands if you join a server as a client and run commands via the in-game console.</p> </li> <li> <p><code>Stop</code> or close the server when you decide to close the multiplayer session.</p> </li> </ol>"},{"location":"guides/multiplayer/od-mp-server-win/#dedicated-console-server","title":"Dedicated console server","text":"<p>The dedicated console server <code>OverdoseServer.exe</code> doesn't have any command line options and only uses <code>config.ini</code> parameters.</p>"},{"location":"guides/multiplayer/od-mp-server-win/#proverdose-server-optional","title":"PROverdose server (optional)","text":"<p>PROverdose is a competitive mod. Its server is compatible with the original Overdose and PROverdose so the client doesn't need to have this mod installed but the client still needs to have the OpenSpy fix.</p> <ol> <li> <p>Download the PROverdose mod. PROverdose 0.4 only supports the latest official Painkiller Overdose v84.4. Earlier versions of PROverdose support Painkiller Overdose v75.3 and lower.</p> </li> <li> <p>Extract the archive's content to your <code>..\\Painkiller Overdose\\Data</code> directory.</p> </li> <li> <p>For your convenience, copy <code>C:\\Users\\%USERNAME%\\AppData\\Local\\Painkiller Overdose\\Overdose.ini</code> to <code>..\\Overdose\\Bin\\</code> and rename it to <code>OverdoseServerPro.ini</code>.</p> </li> <li> <p>Create a Windows shortcut or a BAT file in the <code>..\\Overdose\\Bin\\</code> directory with this content <code>OverdoseDedicatedPro.bat</code>:</p> <pre><code>Overdose -dedicated -lscripts PROverdose.pak -cfg OverdoseServerPro.ini\n</code></pre> </li> <li> <p>Run the server via that file.</p> </li> </ol>"},{"location":"guides/multiplayer/od-mp-server-win/#install-custom-multiplayer-mappack-optional","title":"Install custom multiplayer mappack (optional)","text":"<p>Recommended additional maps can be downloaded here</p> <p>Copy the files to <code>C:/Painkiller Overdose/Data/</code>.</p>"},{"location":"guides/multiplayer/od-mp-server-win/#possible-errors","title":"Possible errors","text":"<pre><code>Net init error: Failed to find socket on port 4974: WSAEADDRNOTAVAIL\n</code></pre> <p>It is possible that you ran the in-game public server with the <code>+interface</code> command so make sure the local IP address exists.</p> <p><pre><code>Net Error: Given address does not reply\n</code></pre> Try joining the server manually via the external IP or without indicating a port if it's a default one.</p> <p><pre><code>GameSpy timeout error!!!\nDescription: No challange value was received from the master server\n</code></pre> Make sure you use the interface where the traffic was forwarded to when running the game.</p>"},{"location":"guides/multiplayer/pk-mp-client/","title":"Setup Painkiller Black Edition multiplayer client","text":"<p>To join a Painkiller multiplayer server, some conditions should be met:</p> <ul> <li>Painkiller game version is 1.64 (Black Edition).</li> <li>PK++ 1.3 mod is installed.</li> <li>A client connects to OpenSpy master server.</li> <li>A client should have a unique CD key.</li> <li>A client should have all the required multiplayer maps installed. Must-have custom maps are <code>DM_1v1_meatless</code> and <code>DM_Blink</code>.</li> </ul>"},{"location":"guides/multiplayer/pk-mp-client/#game-servers","title":"Game servers","text":"<p>Most of the Painkiller gameservers are on OpenSpy now and can be tracked here.</p>"},{"location":"guides/multiplayer/pk-mp-client/#quick-start","title":"Quick start","text":"<p>The quick start part of the guide describes the fastest way to get into the Painkiller Black Edition multiplayer.</p> <p>You don't need to have a full game in this case.</p> <ol> <li>Download the <code>Painkiller 1.64 Lite</code> multiplayer client here. This version of the game is already preconfigured for online play.</li> <li>Unpack the archive.</li> <li>Go to the <code>..\\Painkiller_1.64_Lite\\Bin</code> folder and run the game via the <code>PKPlus1.3.bat</code> file. Allow Windows to launch the file if it's asking to launch an application from an unknown publisher. This BAT will launch the <code>PK++ 1.3</code> mod required for most online servers.</li> <li>Change the CD key. In the game menu, go to <code>Multiplayer</code> -&gt; <code>Player Settings</code> and click on <code>CD key</code>. Remove the previous CD key and enter something random, like <code>3875-f802-f704-1d3e</code>. Mind the format <code>xxxx-xxxx-xxxx-xxxx</code>, where <code>x</code> is a number or a letter. While OpenSpy does not check the validity of your key, game servers may check its format and uniqueness. If you don't do this step, servers might kick you out when joining.</li> <li>Go to <code>Multiplayer</code> -&gt; <code>Join Game</code> and click on the <code>Internet</code> tab, find a server and <code>Join</code> the game.</li> <li>For further questions, join the Painkiller Discord community here.</li> </ol>"},{"location":"guides/multiplayer/pk-mp-client/#full-setup","title":"Full setup","text":"<p>This part of the guide describes the full game multiplayer configuration in case you have a complete Painkiller Black Edition game.</p> <ol> <li>Move from GameSpy to OpenSpy to be able to see servers on the in-game browser list. To use OpenSpy, you can either replace all instances of gamespy.com with openspy.net in <code>Bin/Engine.dll</code> and <code>Bin/Editor/Engine.dll</code> or modify the Windows <code>hosts</code> file. This guide will give you more detailed information on how to do it.</li> <li> <p>Most servers have <code>PK++ 1.2</code> mod installed; hovewer, some have <code>PK++ 1.3</code>. It is a competitive mod made for tournaments. Starting from the <code>1.3</code> version of this mod, it's incompatible with the vanilla Painkiller Black Edition 1.64. It means that you also need to install and run this mod as a client. You can download <code>PK++ 1.3.1u Open Beta</code> here</p> </li> <li> <p>Once <code>PK++ 1.3</code> is installed and GameSpy is fixed, create a shortcut with the following property:</p> <pre><code>C:\\...\\Painkiller\\Bin\\Painkiller.exe -lscripts pkplus.pak\n</code></pre> <p>Alternatively, you can create a BAT file in the game <code>Bin</code> directory with the following content:</p> <pre><code>Painkiller -lscripts pkplus.pak\n</code></pre> <p>Run the game via the shortcut. You should see a black CPL menu logo if the <code>PK++ 1.3</code> mod was run successfully.</p> </li> <li> <p>Change the CD key. In the game menu, go to <code>Multiplayer</code> -&gt; <code>Player Settings</code> and click on <code>CD key</code>. Remove the previous CD key and enter something random, like <code>3875-f802-f704-1d3e</code>. Mind the format <code>xxxx-xxxx-xxxx-xxxx</code>, where <code>x</code> is a number or a letter. While OpenSpy does not check the validity of your key, game servers may check its format and uniqueness. If you don't do this step, servers might kick you out when joining.</p> </li> <li>Install a multiplayer map pack. Since Painkiller does not have a map auto-download feature, so you need to have some custom maps installed beforehand. A lot of custom multiplayer maps for Painkiller can be found on ModDB. You can use this map package as a starter (this mappack is occasionally updated so check if a new version of it has been realeased to be aligned with the servers). PKM maps should be put into the game <code>Data</code> directory.</li> <li>Go to <code>Multiplayer</code> -&gt; <code>Join Game</code> and click on the <code>Internet</code> tab, find a server and <code>Join</code> the game.</li> <li> <p>Adding servers to the <code>Favourites</code> tab. Choose a server and click the <code>Add to Favourites</code> button and this server will appear on the <code>Favourites</code> tab.</p> </li> <li> <p>Useful settings and console commands:</p> <ul> <li>Set maxfps 125 in console for consistent physics when playing locally (it affects jumps and jumppads):</li> </ul> <pre><code>/setmaxfps 125\n</code></pre> <ul> <li>To turn off the default Warmup time, modify <code>\\Bin\\config.ini</code>:</li> </ul> <pre><code>Cfg.WarmUpTime = 0\n</code></pre> <ul> <li>Common console voting commands:</li> </ul> <pre><code>/maplist\n/callvote map mapname\n/callvote gamemode gamemodename\n/vote yes\n/ready\n</code></pre> <p>where gamemodename: <code>ffa/tdm/pcf/tlb/voosh/ctf/lms/duel</code></p> </li> <li> <p>For further questions, join the Painkiller Discord community here.</p> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/","title":"Painkiller 2004 Linux Game Server in Docker","text":"<p>You can find the code here.</p> <p>The goal of the project was to make the 32-bit Painkiller Linux server work on most 64-bit Linux operating systems without any hassle.</p> <p>Docker fits this purpose because it isolates containers from the host system.</p> <p>Warning</p> <p>Before you start to launch a server, please note that in order to see servers advertised on OpenSpy directly in the game browser, you need a patched Painkiller client DLL. Please check the details here.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#overview","title":"Overview","text":"<ol> <li> <p>Binary Hacks. The original Linux <code>pkserver</code> binary from People Can Fly is very limited. It starts with the hardcoded <code>+dedicatedserver +map +port</code> parameters which cannot be overriden and only accepts the <code>+interface</code> and <code>+private</code> command line options. You are not able to pass custom <code>-lscripts</code> and <code>-cfg</code>. However, it's possible hack the <code>pkserver</code> binary to accept custom <code>LScripts.pak</code> and <code>config.ini</code>. The method is described here. This Docker image contains that binary hack.</p> </li> <li> <p>Docker environment variables. The Docker image also has a script that allows to pass the <code>Cfg_</code> environment variables to the Docker container that will override parameters in the default <code>config.ini</code> with the similar names. For example, you can pass the <code>Cfg_ServerPort</code> variable and it will override the <code>Cfg.ServerPort</code> parameter in the <code>config.ini</code> file.</p> </li> <li> <p>Outdated <code>gamespy.com</code> was replaced with <code>openspy.net</code> in the binary as well.</p> </li> <li> <p>The Docker image contains LScripts for PK++ 1.2 and PK++ 1.3 competition mods.</p> <p>PK++ 1.2 is compatible with the original Painkiller while PK++ 1.3 server requires a client to have PK++ 1.3 mod installed.</p> </li> <li> <p>Added semi-official competitive maps Meatless and Blink.</p> </li> </ol> <p>Note</p> <p>The Painkiller server listens on <code>3455</code> UDP port by default. The game also listens on the <code>3578</code> UDP port for LAN discovery. If you increment your multiplayer port by one, like in <code>3456</code>, the LAN port will also be incremented by the game automatically to <code>3579</code>. You only need to publish the LAN port in Docker if you run a clent and a server on the same machine which is unlikely.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#environment","title":"Environment","text":"<p>A Docker container is a running instance of a Docker image. When you run a Docker image, it becomes a Docker container.</p> <p>This Docker image can be used on most 64-bit Linux distributions.</p> <p>I tested Docker containers on Ubuntu 22.04.4 LTS on Virtual Box 7.0.18 with Bridged Adapter and promiscuous mode. The containers were also launched on a production Ubuntu 24.04 LTS server.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#supported-architectures","title":"Supported Architectures","text":"<ul> <li>Linux AMD64 (x86-64)</li> <li>Linux ARM64</li> </ul> <p>The Docker image is based on Debian. Unlike Ubuntu, Debian still has a very good support for 32-bit applications on AMD64 and ARM64 OS.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#prerequisites","title":"Prerequisites","text":"<ul> <li>Docker Engine with Docker Compose</li> <li>Optional: QEMU for multi-platform builds</li> </ul> <p>Warning</p> <p>Podman and Podman Compose are not recommended due to potential issues with the default bridge network. Moreover, Podman doesn't directly manage restart policies and instead depends on systemd since Podman does not have its own deamon. However, Podman woks fine with the host network plugin. Pay attention that Docker cannot see Podman images and vice versa so better stick to one tool.</p> <p>The Docker installation guides are a bit confusing. It's enough to install Docker Engine. Docker Desktop is only for systems with GUI and is optional.</p> <ol> <li> <p>Install Docker Engine. Here is the guide for Ubuntu. The Docker Compose plugin is already included in the default Docker plugin list.</p> </li> <li> <p>Don't forget the Linux post-installation steps to manage Docker as a non-root user.</p> </li> <li> <p>Check that the Docker daemon is running:</p> <pre><code>sudo systemctl status docker.service\n</code></pre> </li> </ol> <p>Note</p> <p>QEMU emulation is only necessary if you want to build an ARM64 image on a AMD64 machine.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#quick-start-with-docker-compose","title":"Quick start with Docker Compose","text":"<p>Docker Compose is a fast and convenient way to declaratively configure multiple containers. It uses YAML configuration file that have strict indentations. You can run multiple servers with one command, no additional scripts are required.</p> <p>The <code>docker-compose.yml</code> is provided in the repository as a template. Most parameters are preconfigured.</p> <p>Note</p> <p>Pay attention to the <code>Cfg_ServerPort</code> variable or the <code>Cfg.ServerPort</code> parameter in the <code>config.ini</code> file. The port should be different for each server. If you, for example, run several servers on the same port, other containers will crash.</p> <p>Issue: Docker Compose mounts files as folders. Solution: indicate the path to the custom file with dot/slash, for instance: <code>source: ./DM_K3Inzane.pkm</code>.</p> <ol> <li> <p>Copy the <code>docker-compose.yml</code> file from the repository to your host.</p> </li> <li> <p>Make necessary changes. For example, leave only one server.</p> </li> <li> <p>Open necessary ports on your system.</p> </li> <li> <p>Run the following command in the same directory:</p> <pre><code>docker compose up -d\n</code></pre> <p>It will launch preconfigured server/servers.</p> <p>Note</p> <p>You can also rename and specify a custom file while running docker compose:</p> <pre><code>docker compose -f painkiller-docker-compose.yml up -d\n</code></pre> </li> <li> <p>Stop and remove the servers:</p> <pre><code>docker compose down\n</code></pre> <p>Or</p> <pre><code>docker compose -f painkiller-docker-compose.yml down\n</code></pre> </li> </ol> <p>That's the bare minimum you need to know to launch your servers. The below profound information is necessary to understand how Docker works, how to manage it, what solutions were implemented in the Docker image, and how to build your own Docker image.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#quick-start-with-docker","title":"Quick start with Docker","text":"<p>By default, Docker uses the bridge network wich has its own subnet range. This network requires you to publish ports. Alternatively, you can use the host network which uses the IP addresses of your host network. You don't need to publish ports in case of the host network. However, you may need to pass <code>+interface</code> or <code>Cfg_NetworkInterface</code> to the Docker container if you have multiple interfaces on your host. This will tell the <code>pkserver</code> binary to run on a particular IP address that has access to the internet.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#docker-default-bridge-network","title":"Docker default bridge network","text":"<p>Warning</p> <p>Podman may not work properly with the bridge network plugin. I recommend using Docker with this type of network.</p> <p>Note</p> <p>The Docker image is published to Docker Hub and to GitHub Container Registry. Use the one which is more convenient for you:</p> <p><code>ghcr.io/t3r6/pkserver:main</code> <code>docker.io/painkillergameclassic/pkserver:main</code></p> <ol> <li> <p>Start a server with the <code>ffa</code> name. This command will automatically pull the Docker image from Docker Hub and start a Docker container on your machine. The LAN port <code>3578</code> is published as an example and is not required:</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp -p 3578:3578/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> <p>Note</p> <p><code>--rm</code> means that the container will be removed once you stop it. <code>--name ffa</code> assignes the <code>ffa</code> name to the container. <code>-it</code> improves the interaction with the container. <code>-d</code> detaches your container to the background so it does not occupy your terminal session. <code>-p</code> publishes the UDP port in our case. The host port is mapped to the container port.</p> </li> <li> <p>Check that the container with the pkserver is running:</p> <pre><code>$ docker container ls\n\nCONTAINER ID   IMAGE                                 COMMAND           CREATED         STATUS         PORTS                                                 NAMES\n\ne9191538423b   painkillergameclassic/pkserver:main   \"entrypoint.sh\"   8 seconds ago   Up 7 seconds   0.0.0.0:3455-&gt;3455/udp, :::3455-&gt;3455/udp, 3578/udp   ffa\n</code></pre> <p>Check the port the container is running on:</p> <pre><code>$ ss -tuln | grep 3455\n\nudp   UNCONN 0      0            0.0.0.0:3455       0.0.0.0:*\nudp   UNCONN 0      0               [::]:3455          [::]:*\n</code></pre> </li> <li> <p>Open and forward the default Painkiller 3455 port in your firewall if required. For example, if you run a server on a Virtual machine. Please check this guide on port forwarding. I suggest opening several ports beforehand in case of multiple servers: 3455, 3456, 3457.</p> </li> <li> <p>Modify your firewall, iptables, AppArmor, SeLinux if you amended them before and blocked traffic. For example, open a range of ports on Ubuntu:</p> <pre><code>sudo ufw allow 3455:3457/udp\n</code></pre> </li> <li> <p>Check if your game is advertised on OpenSpy.</p> </li> <li> <p>Open the Painkiller game client and join a server.</p> <p>Note</p> <p>It's likely that you won't see your own server in the in-game browser if you run the server and the clinet on the same machine so join it via IP. <pre><code>/connect ip\n</code></pre></p> </li> <li> <p>Stop the container named <code>ffa</code>:</p> <pre><code>docker container stop ffa\n</code></pre> </li> <li> <p>Remove the stopped container. Usually, this is not required since the <code>--rm</code> option removes the conatainer once you stop it. However, in some cases your container could get stuck so better double-check. Run the following command to check the failed containers:</p> <pre><code>docker container ls -a\n</code></pre> <p>Remove the failed containers:</p> <pre><code>docker container prune\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#docker-host-network","title":"Docker host network","text":"<p>Docker and Podman work equally well on this type of network.</p> <p>In case you have any issues with the default Docker bridge network, like errors connected with NATNEG, try the Docker host network. In this case, you'll need to indicate the IP of your network adapter that has access to the internet if you have multiple devices (192.168.0.106 in my example). Run the following command to check the network interfaces:</p> <pre><code>~$ ip --brief address show\n\nlo               UNKNOWN        127.0.0.1/8 ::1/128 \nenp0s3           UP             192.168.0.106/24 fe80::91ee:4f1b:1582:d667/64 \ndocker0          UP             172.17.0.1/16 fe80::42:78ff:fecd:b400/64 \n</code></pre> <p>It's the IP address of the <code>enp0s3</code> interface in my case.</p> <p>Launch a Docker container with the following command:</p> <pre><code>docker run --rm --name ffa -itd -e Cfg_NetworkInterface=\"192.168.0.106\" --net=host docker.io/painkillergameclassic/pkserver:main\n</code></pre> <p>Alternative command:</p> <pre><code>docker run --rm --name ffa -itd --net=host docker.io/painkillergameclassic/pkserver:main +interface 192.168.0.106\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#running-on-a-different-port","title":"Running on a different port","text":"<p>In case you need to run a game on a different port, use Docker port mapping and the <code>Cfg_ServerPort</code> variable.</p> <p>Warning</p> <p>Note that Painkiller GameSpy backend is outdated which can cause issues with the NATNEG protocol. Thus, we must map the same Docker ports on the container and the host and also change the port in the Painkiller config.ini. For instance, with this command the client will get errors when connecting to your server via the in-game browser: <pre><code>docker run --rm --name ctf -itd -p 3456:3455/udp  docker.io/painkillergameclassic/pkserver:main\n</code></pre> Pay attention that we map the <code>3456</code> port on the host to the <code>3455</code> Docker container port. The clinet will get the following error: <pre><code>NAT Negotiation error: Partnet did not register with the NAT Negotiation Server\n</code></pre> Nevertheless, a clinet should be able to connect to your server by running manually the <code>/connect ip:port</code> command in the game console.</p> <p>It seems that the game tells OpenSpy that it is up on port <code>3455</code>, while <code>3456</code> port is mapped from the docker engine to the host system, but this is not an address translation, but simply a port mapping. Apparently, NATNEG is trying to negotiate through port <code>3455</code> when the negotiation should be through <code>3456</code>.</p> <p>The below commands work and do not produce connection errors.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#custom-ports-with-the-docker-default-bridge-network","title":"Custom ports with the Docker default bridge network","text":"<pre><code>docker run --rm --name ffa -itd -p 3456:3456/udp -e Cfg_ServerPort=\"3456\" docker.io/painkillergameclassic/pkserver:main\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#custom-ports-with-the-docker-host-network","title":"Custom ports with the Docker host network","text":"<pre><code>docker run --rm --name ffa -itd -e Cfg_ServerPort=\"3456\" -e Cfg_NetworkInterface=\"192.168.0.106\" --net=host docker.io/painkillergameclassic/pkserver:main\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#building","title":"Building","text":""},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#build-docker-image-from-a-dockerfile","title":"Build Docker image from a Dockerfile","text":"<ol> <li> <p>Clone or download the github repository.</p> </li> <li> <p>Modify files if required. You can put additional maps, modify <code>config.ini</code>, hack <code>pkserver</code> binary beforehand, add your own scripts, make amendments to the Dockerfile.</p> </li> <li> <p>Run the following command:</p> <pre><code>docker build . --no-cache -t pkserver:v1\n</code></pre> <p>Note</p> <p><code>dot</code> is an indication that you build the Docker image from the Dockerfile in this directory. <code>-t/--tag</code> is the name of your future local Docker image. <code>--no-cache</code> does not use cache.</p> <p>To build from a Dockerfile with a custom name:</p> <pre><code>docker build -f custom.Dockerfile . --no-cache -t pkserver:v1\n</code></pre> </li> <li> <p>Check the built Docker images:</p> <pre><code>docker image ls\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-a-server-after-the-build","title":"Run a server after the build","text":"<ol> <li> <p>Start a server with the <code>ffa</code> name:</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp pkserver:v1\n</code></pre> </li> <li> <p>Check that the container with the server is running:</p> <pre><code>docker container ls\n</code></pre> <p>Note</p> <p>If you don't see a container with this command, try to run:</p> <pre><code>docker container ls -a\n</code></pre> <p>It's high likey that your container exited with an error. You'll need to investigate the error, make fixes and re-build the image again.</p> </li> <li> <p>Stop the <code>ffa</code> container:</p> <pre><code>docker container stop ffa\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#push-your-image-to-the-container-registry","title":"Push your image to the container registry","text":"<p>You should be registered to either GitHub or Docker Hub.</p> <ol> <li> <p>Register in any of the mentioned services.</p> </li> <li> <p>Re-tag your Docker image with:</p> <pre><code>docker image tag pkserver:v1 yourregistryname/pkserver:v1\n</code></pre> </li> <li> <p>Log in to the registry:</p> <pre><code>docker login\n</code></pre> </li> <li> <p>Push your image to the registry:</p> <pre><code>docker push yourregistryname/pkserver:v1\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-containers-with-different-parameters","title":"Run containers with different parameters","text":""},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#using-config-variables","title":"Using config variables","text":"<p>You can pass variables to the container instead of modifying the <code>config.ini</code> file. Each variable corresponds to the <code>Cfg</code> parameter in <code>config.ini</code> and should start with <code>Cfg_</code>. The letter case does not matter, except for special <code>PKS_</code> variables. For example, <code>Cfg.ServerPort</code> corresponds to <code>CFG_SERVERPORT</code> or <code>Cfg_ServerPort</code>, <code>Cfg.NetworkInterface</code> to <code>CFG_NETWORKINTERFACE</code> or <code>Cfg_NetworkInterface</code>. However, <code>PKS_LSCRIPTS</code> should be passed with capital letters only. Let's start a <code>PK++ 1.3</code> server on a <code>3456</code> port:</p> <pre><code>docker run --rm --name ffa -itd -p 3456:3456/udp -e Cfg_ServerPort=\"3456\" -e PKS_LSCRIPTS='PKPlus13.pak' docker.io/painkillergameclassic/pkserver:main\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-a-server-with-a-custom-config","title":"Run a server with a custom config","text":""},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#bind-a-custom-host-config-to-the-default-pkserver-config","title":"Bind a custom host config to the default pkserver config","text":"<p>Docker containers are ephemeral. It means that when you restart a container, all the information will be lost and you start from scratch. If you are NOT going to use the <code>Cfg_</code> variables with a container, you need to bind a <code>config.ini</code> file from the outside to the Docker container. The simplest way would be to use the bind mounts Docker feature. As an alternative, you can use the Docker volumes but I found this method inconvenient for the Painkiller server management since you cannot insert data directly into a volume without copying it to a container.</p> <ol> <li> <p>Copy <code>./pkserver/Bin/config.ini</code> from the repository to your host, for example, to <code>${HOME}/my_pkserver/config.ini</code>.</p> </li> <li> <p>Make sure the file has the right permissions:</p> <pre><code>chmod 664 config.ini\n</code></pre> </li> <li> <p>You can leave the file as is or rename it whatever you like. Let's rename it to <code>config_ffa.ini</code>.</p> </li> <li> <p>Run the server with the following commands. You bind <code>config_ffa.ini</code> on your host machine to <code>config.ini</code> in the Docker container:</p> <pre><code>export PKS_CFG_SOURCE=\"${HOME}/my_pkserver/config_ffa.ini\"\ndocker run --rm --name ffa -itd --mount type=bind,source=${PKS_CFG_SOURCE},target=/opt/pkserver/Bin/config.ini -p 3455:3455/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#bind-a-custom-host-config-to-the-custom-pkserver-config","title":"Bind a custom host config to the custom pkserver config","text":"<p>Note</p> <p>This hack is outdated.</p> <ol> <li> <p>Modify <code>${HOME}/my_pkserver/config.ini</code> to your needs and rename this file to something like <code>conctf.ini</code>.</p> <p>Warning</p> <p>When the <code>PKS_CFG</code> variable is used, you can only give a custom name to <code>config.ini</code> with the exact 6 letter size because scripts in this image hacks the binary, for example, you can rename it to <code>conffa.ini</code>, <code>conctf.ini</code> but you cannot name it <code>myconfig.ini</code>.</p> </li> <li> <p>Run the server with the following commands:</p> <pre><code>export PKS_CFG_SOURCE=\"${HOME}/my_pkserver/conctf.ini\"\ndocker run --rm --name ffa -itd -e PKS_CFG=\"conctf.ini\" --mount type=bind,source=${PKS_CFG_SOURCE},target=/opt/pkserver/Bin/conctf.ini -p 3455:3455/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> <p>If you connect to the Docker container, there will be <code>conctf.ini</code> inside the <code>/opt/pkserver/Bin</code> directory. The <code>pkserver</code> binary will use <code>conctf.ini</code> instead of the default <code>config.ini</code> file:</p> <pre><code>painkiller@2d2e79d33500:/opt/pkserver$ ls Bin/\nconctf.ini  config.ini  id.bin  pkserver\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-a-server-with-custom-lscripts","title":"Run a server with custom LScripts","text":""},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-pk","title":"Run PK++","text":"<p>The Docker image has 2 custom packages: <code>./pkserver/Data/PKPlus12.pak</code> for <code>PK++ 1.2</code> and <code>./pkserver/Data/PKPlus13.pak</code> for <code>PK++ 1.3</code>.</p> <p>Warning</p> <p>Note that unlike PK++ 1.2, PK++ 1.3 is not backward compatible with the original Painkiller. A client should run PK++ 1.3 to connect to the PK++ 1.3 server.</p> <p>In order to run a specific version of the mod, pass the package name to the CLI via the <code>PKS_LSCRIPTS</code> Docker variable:</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp -e PKS_LSCRIPTS='PKPlus13.pak' docker.io/painkillergameclassic/pkserver:main\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-a-custom-server-mod","title":"Run a custom server mod","text":"<p>It is possible to use LScripts packs with custom names; however, you'll need to either bind them using bind mounts, copy to volumes, or add them to <code>./pkserver/Data/</code> and rebuild the Docker image.</p> <p>Warning</p> <p>You can only give a custom name to <code>LScripts.pak</code> with the exact 8 letter size because it's a hack, for example, you can rename it to <code>LScript3.pak</code> but you cannot name it <code>MyLScripts.pak</code>.</p> <ol> <li> <p>Make sure the file has the right permissions:</p> <pre><code>chmod 664 LScript3.pak\n</code></pre> </li> <li> <p>Run the custom pak with this command:</p> <pre><code>export PKS_LSCRIPTS_SOURCE=\"${HOME}/my_pkserver/LScript3.pak\"\ndocker run --rm --name ffa -itd -p 3455:3455/udp -e PKS_LSCRIPTS=\"LScript3.pak\" --mount type=bind,source=${PKS_LSCRIPTS_SOURCE},target=/opt/pkserver/Data/LScript3.pak docker.io/painkillergameclassic/pkserver:main\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-a-server-with-custom-maps","title":"Run a server with custom maps","text":"<p>Let's say you put a custom map to <code>${HOME}/my_pkserver/DM_K3Inzane.pkm</code> on your host machine:</p> <ol> <li> <p>Make sure the file has the right permissions:</p> <pre><code>chmod 664 DM_K3Inzane.pkm\n</code></pre> </li> <li> <p>Bind a map from the host to the Docker container with this command:</p> <pre><code>export MAP1_SOURCE=\"${HOME}/my_pkserver/DM_K3Inzane.pkm\"\ndocker run --rm --name ffa -itd -p 3455:3455/udp --mount type=bind,source=${MAP1_SOURCE},target=/opt/pkserver/Data/DM_K3Inzane.pkm docker.io/painkillergameclassic/pkserver:main\n</code></pre> <p>Note</p> <p>You can't bind multiple maps with one command as Docker does not support wildcards with bind mounts. Each map should be bound one by one. It can be simplified with Docker Compose.</p> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#run-multiple-containers-based-on-the-same-image","title":"Run multiple containers based on the same image","text":"<p>You can run multiple server instances based on the same image by giving them different names and passing different ports. Setting the <code>Cfg_ServerPort</code> variable is the most convenient way.</p> <p>Let's say I want to launch 3 servers (FFA, DUEL, CTF) on different ports using the same Docker image. The examples are simplified since I don't pass any additional configuration variables and don't use any bind mounts:.</p> <ol> <li> <p>Run the containers:</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> <pre><code>docker run --rm --name duel -itd -e Cfg_ServerPort=\"3456\" -p 3456:3456/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> <pre><code>docker run --rm --name ctf -itd -e Cfg_ServerPort=\"3457\" -p 3457:3457/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> </li> <li> <p>Check the containers are running:</p> <pre><code>docker container ls\n</code></pre> <p>Check if there are failed containers:</p> <pre><code>docker container ls -a\n</code></pre> </li> <li> <p>Stop and delete all containers:</p> <pre><code>docker stop $(docker ps -a -q)\ndocker rm $(docker ps -a -q)\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#using-docker-volumes","title":"Using Docker volumes","text":"<p>This is an alternative to bind mounts. I find this way of managing the Painkiller server redundant since it will take additional space of your hard drive and prevents your configs from being \"clean\".</p> <p>If you need your files to be persisted independently of the container state and bind mounts are not the option, you need to use the Docker volumes.</p> <p>The default Docker anonymous volumes get deleted automatically when you remove the Docker container. That's not what you want.</p> <p>Named Volumes allow you to save your server data independently of the container state and mount them to other containers.</p> <ol> <li> <p>Create a named volume:</p> <pre><code>docker volume create pk-data-ffa\n</code></pre> </li> <li> <p>Start a container with a volume:</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp --mount source=pk-data-ffa,target=/opt/pkserver docker.io/painkillergameclassic/pkserver:main\n</code></pre> </li> <li> <p>Remove the resources:</p> <pre><code>docker container stop ffa\n\ndocker volume rm pk-data-ffa\n</code></pre> </li> </ol> <p>It is not advised to copy and delete files directly from Docker volumes. In order to add files, you need to use the docker cp command. If you want to delete them, you'll need to log in to the container and remove the files from there.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#managing-server-logs-and-stats","title":"Managing server logs and stats","text":"<p>This step is useful if you need to keep logs and you don't use Docker volumes.</p> <p>To manage <code>pkserver</code> logs and stats, you need to create a cron job that periodically copies LOG and TXT files from a container to your host.</p> <p><code>pkserver</code> keeps them in the <code>/opt/pkserver/Bin/</code> directory. In this example, we copy LOG and TXT files from the container with the <code>ffa</code> name to the <code>HOME</code> directory on the host:</p> <pre><code>docker exec ffa bash -c 'tar -cf - /opt/pkserver/Bin/*.log /opt/pkserver/Bin/*.txt' | tar --strip-components 3 -C ${HOME} -xvf -\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#managing-server-resources","title":"Managing server resources","text":""},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#resource-limits","title":"Resource limits","text":"<p><code>pkserver</code> has memory leaks. It is advised to set RAM limits on a container (250 MB for Duels and not more than 400 MB for FFA):</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp --memory=\"400m\" docker.io/painkillergameclassic/pkserver:main\n</code></pre> <p>Check the container stats:</p> <pre><code>docker stats\n</code></pre> <p>Exit stats with <code>Ctrl + C</code>.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#restart-policy","title":"Restart policy","text":"<p>Note</p> <p>Restart policy option only works with <code>docker</code> by default. If you want to use restart policies with <code>podman</code>, you need to run <code>podman generate systemd --restart-policy container_id</code> or find another workaround.</p> <p>A restart policy is useful to keep your Docker containers up even after the system reboot.</p> <p>Set the container restart policy:</p> <pre><code>docker run --name ffa -itd -p 3455:3455/udp --memory=\"400m\" --restart always docker.io/painkillergameclassic/pkserver:main\n</code></pre> <p>If you container got stuck in a loop of restarts, run this command to turn off the restart policy:</p> <pre><code>docker update --restart=no ffa\n</code></pre>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#mini-dockerfile","title":"Mini Dockerfile","text":"<p>This image is for rare cases. It is a solution when you want to run a \"classic\" server but you have issues with installing 32-bit packages on your system.</p> <p>This is merely a wrapper around the <code>pkserver</code> package. It is implied that you have the full pkserver package on your host and use Docker bind mounts to mount every folder to the Docker container.</p> <ol> <li> <p>Building:</p> <pre><code>docker build -f mini.Dockerfile . --no-cache -t pkserver-mini:v1\n</code></pre> </li> <li> <p>Launching. Since the Linux Painkiller server has soft links, you need to bind them to the Docker container as well. Let's assume you installed <code>pkserver</code> to the <code>${HOME}/pkserver/</code> directory:</p> <pre><code>docker run --rm -it --name mini -p 3455:3455/udp --mount type=bind,source=\"${HOME}\"/pkserver/Bin,target=/opt/pkserver/Bin --mount type=bind,source=\"${HOME}\"/pkserver/bin,target=/opt/pkserver/bin --mount type=bind,source=\"${HOME}\"/pkserver/Data,target=/opt/pkserver/Data --mount type=bind,source=\"${HOME}\"/pkserver/data,target=/opt/pkserver/data pkserver-mini:v1\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux-docker/#debug-a-container","title":"Debug a container","text":"<ol> <li> <p>Pass the <code>+private</code> parameter to test Docker containers without exposing them to OpenSpy:</p> <pre><code>docker run --rm --name ffa -itd -p 3455:3455/udp docker.io/painkillergameclassic/pkserver:main +private\n</code></pre> </li> <li> <p>To gracefully stop your server so that it won't dangle on OpenSpy, you need to attach to your container and run the <code>/quit</code> command:</p> <pre><code>docker container attach ${container_name}\n</code></pre> <p>To detach again, press <code>CTRL + P</code> followed by <code>CTRL + Q</code>.</p> </li> <li> <p>You can enter your container with:</p> <pre><code>docker exec -it ${container_name} bash\n</code></pre> <p>To exit a container, type:</p> <pre><code>exit\n</code></pre> </li> <li> <p>Enter a failed container by changing Docker entrypoint:</p> <pre><code>docker run -it --entrypoint=bash ${container_name}\n</code></pre> </li> <li> <p>Log in to a container as a root:</p> <pre><code>docker exec -it -u 0 ffa bash\n</code></pre> <p>You can then install all the required tools in the container with:</p> <pre><code>apt-get update &amp;&amp; apt-get install\n</code></pre> </li> <li> <p>To ping from a container, you need to enable some container capabilities. Add <code>--cap-add=IPC_LOCK --cap-add=NET_RAW</code> as a command line options when starting a new container:</p> <pre><code>docker run --rm --name ffa -itd --cap-add=IPC_LOCK --cap-add=NET_RAW -p 3455:3455/udp docker.io/painkillergameclassic/pkserver:main\n</code></pre> </li> <li> <p>To copy inside/outside containers use docker cp.</p> </li> <li> <p>Clean your system from all Docker user packages:</p> <pre><code>docker system prune -a\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux/","title":"Setup Painkiller Black Edition Linux Multiplayer Dedicated Server","text":"<p>Warning</p> <p>This setup was tested on Ubuntu 22.04 and Debian 12. Some 32-bit packages were removed from Ubuntu 24.04 repositories so you'll need to download and install them manually but it's not within the scope of this guide.</p> <p>A short remark for a beginner. A server is a computer (host) that provides information to other computers called clients. So when you create a game, your PC is a \"server\" and those who join it are the \"clients\".</p> <p>This guide implies that you are familiar with Linux OS.</p> <p>The People Can Fly videogame company provided an official Linux server for Painkiller. It's more stable than the Windows server and it's much cheaper to host, that's why all the dedicated servers are mostly on Linux. However, this binary is 32-bit and has its own drawbacks which we'll discuss below.</p> <p>The official packages for the Linux server are Painkiller Linux Server 1.62 and its patch Painkiller Linux Server 1.64 Update provided as separate TAR archives. The pkserver binary was integrated with the outdated GameSpy server discovery network.</p> <p>It's not convenient to work with those official packages so I made a combined pack based on the official ones.</p>"},{"location":"guides/multiplayer/pk-mp-server-linux/#prerequisites","title":"Prerequisites","text":"<p>Your Linux OS should support 32-bit applications.</p> <ol> <li> <p>Log in to your server.</p> </li> <li> <p>Prepare Ubuntu 22.04 server to accept 32-bit architecture since <code>pkserver</code> was compiled for 32-bit systems. You may need to run this command as a root with <code>sudo</code>:</p> <pre><code>dpkg --add-architecture i386\n</code></pre> </li> <li> <p>Install additional 32-bit packages. You may need to run the commands as a root with <code>sudo</code>:</p> <pre><code>apt-get update\napt-get install -y zlib1g:i386 libncurses5:i386 libstdc++5:i386\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux/#installation","title":"Installation","text":"<ol> <li> <p>Download the Painkiller Linux server package here. This pack already has a modified <code>pkserver</code> binary that advertises its servers to OpenSpy.</p> <p>Note</p> <p>If you want to use clean official packages, they can be downloaded here. In this case, you'll need an extra step of replacing all the GameSpy instances in a binary or modifying an <code>/etc/hosts</code> file which is described in the GameSpy to OpenSpy guide.</p> </li> <li> <p>Connect to your server and upload the archive with an FTP program like Total Commander or <code>scp</code> to a Linux directory, for example, <code>/opt</code>.</p> </li> <li> <p>Go to your <code>/opt</code> directory:</p> <pre><code>[login@shell ~]$ cd /opt\n</code></pre> </li> <li> <p>Unpack the files:</p> <pre><code>[login@shell opt]$ tar -zxfv pkserver_linux_1.64_openspy.tar.gz\n</code></pre> </li> <li> <p>You'll get the <code>pkserver</code> directory. Remove the archive:</p> <pre><code>[login@shell opt]$ ls\npkserver_linux_1.64_openspy.tar.gz pkserver\n</code></pre> <pre><code>[login@shell opt]$ rm pkserver_linux_1.64_openspy.tar.gz\n</code></pre> </li> <li> <p>Examine the <code>pkserver</code> directory. Pay attention that Linux is case-sensitive, unlike Windows. <code>bin</code> is linked to <code>Bin</code> and <code>data</code> is linked to <code>Data</code>. It was done this way so you can easily navigate and feel it like in Windows:</p> <pre><code>[login@shell opt]$ cd pkserver\n[login@shell pkserver]$ ls -al\n\ntotal 20\ndrwxr-xr-x 5 painkiller     painkiller     4096 Jun 12 06:38 .\ndrwxrwxr-x 4 painkiller     painkiller     4096 Jun 12 06:50 ..\nlrwxrwxrwx 1 painkiller     painkiller        3 Feb  4  2005 bin -&gt; Bin\ndrwxr-xr-x 2 painkiller     painkiller     4096 Jun 11 14:05 Bin\nlrwxrwxrwx 1 painkiller     painkiller        4 Mar 25  2005 data -&gt; Data\ndrwxr-xr-x 7 painkiller     painkiller     4096 Jun 11 14:05 Data\ndrwxr-xr-x 2 100999 100999 4096 Jun 12 06:38 pkserver\n</code></pre> </li> <li> <p>Enter the <code>Bin</code> directory with <code>cd</code>:</p> <pre><code>[login@shell pkserver]$ cd Bin\n</code></pre> </li> <li> <p>Run <code>ls</code> to see two files: <code>config.ini</code> \u2013 the server settings, <code>pkserver</code> \u2013 executable file.</p> <pre><code>[login@shell Bin]$ ls\nconfig.ini  pkserver\n</code></pre> </li> <li> <p>Find out which network interface in your server has access to the Internet:</p> <pre><code>$ ip --brief address show\nlo               UNKNOWN        127.0.0.1/8 ::1/128\nenp0s3           UP             192.168.0.106/24 fe80::91ee:4f1b:1582:d667/64\n</code></pre> <p>Note</p> <p>If your server is behind NAT, like in this example, forward the necessary port (the default port in Painkiller is <code>3455</code>) like it's described in this guide.</p> </li> <li> <p>Make sure you don't have any firewall rules preventing a client from connecting to your server and so that the game port is not occupied:</p> <pre><code>netstat -tuplen\niptables -L -vn\n</code></pre> <p>Also, make sure that your provider is not blocking certain IP ranges.</p> </li> <li> <p>Start <code>pkserver</code> with the <code>+interface</code> parameter (the corresponding parameter in the <code>config.ini</code> file is <code>Cfg.NetworkInterface</code>). Enter the IP address of the network interface that has access to the Internet:</p> <pre><code>[login@shell Bin]$ ./pkserver +interface 192.168.0.106\nFree For All\n&gt;\n</code></pre> <p>Note</p> <p>It is possible to run <code>pkserver</code> without the <code>+interface</code> parameter; however, in this case, you'll need to replace all your localhosts in your <code>/etc/hosts</code> file with your interface <code>192.168.0.106</code>. This is not recommended. Example:</p> <pre><code>$ cat /etc/hosts\n# 127.0.0.1     localhost\n# 127.0.1.1     VirtualBox\n192.168.0.106   painkiller\n</code></pre> <p>Note</p> <p>Under the hood, <code>pkserver</code> automatically uses <code>+dedicatedserver +map +port</code> parameters. You won't be able to override those. Moreover, this binary does not accept the \"-\" options, like <code>-config</code> or <code>-lscripts</code>. This is an oversight by the developers.</p> <p>Note</p> <p>You can debug which interface the game runs on in a new terminal with the <code>netstat</code> command: <pre><code>$ netstat -ano | grep 3455\nudp        0      0 192.168.0.106:3455      0.0.0.0:*                           off (0.00/0/0)\n</code></pre></p> </li> <li> <p>Connect to your server either via the local IP (if there is a NAT configuration) or the public IP. The port can be omitted if it is default 3455:</p> <pre><code>/connect 192.168.0.106:3455\n</code></pre> </li> <li> <p>To stop the server enter the command <code>/exit</code>:</p> <pre><code>&gt;\n/exit\n[login@shell Bin]$\n</code></pre> </li> <li> <p>To change the port your server runs on, go to <code>config.ini</code> and modify the <code>Cfg.ServerPort</code> line.</p> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux/#install-pk-painkiller-competition-mod","title":"Install PK++ (Painkiller competition mod)","text":"<ol> <li> <p>Download PK++. You can either use PK++ 1.3 which has more features or PK++ 1.2.1.64 which is more stable and compatible with the original.</p> <p>Warning</p> <p>if you want your server to be compatible with the original 1.64 client as well as PK++ 1.3 client, you need a PK++ 1.2 server.</p> <p>PK++ 1.3 server requires a PK++ 1.3 client and is not compatible with the default 1.64 or PK++ 1.2 client.</p> </li> <li> <p>Since <code>pkserver</code> binary does not accept the <code>-lscripts</code> parameter, you have to replace <code>LScripts.pak</code> with the renamed <code>PKPlus.pak</code> from PK++. Hacking <code>pkserver</code> binary is also possible but it's out of the scope of this guide. </p> <p>Download the PK++ <code>PKPlus.pak</code>, rename it and replace the original <code>LScripts.pak</code> with it in the <code>pkserver/Data</code> directory. It can be done with one command in Linux:</p> <pre><code>mv PKPlus.pak /opt/pkserver/Data/LScripts.pak\n</code></pre> </li> <li> <p>Start the server and you'll see bots:</p> <pre><code>[login@shell Bin]$ ./pkserver +interface 192.168.0.106\nFree For All\nGrrr has entered the arena.\nGrrr is ready.\nRumbraugh has entered the arena.\nRumbraugh is ready.\nRumbraugh is now in team: Red.\nGrrr is now in team: Blue.\nMatch Started.\n&gt;\n</code></pre> </li> </ol>"},{"location":"guides/multiplayer/pk-mp-server-linux/#configure-rcon","title":"Configure RCON","text":"<p>RCON (remote console) is a remote administration tool and a protocol to manage a game server.</p> <p>Note</p> <p>It is a feature of PK++. This command does not work with the original Painkiller. It'll only work if both the server and the client have the PK++ mod installed.</p> <p>With this tool, you can run all server commands as admin, with no voting required. All the commands can be either issued in the server console or directly in the client console.</p> <p>In the configuration file <code>config.ini</code> that's on the server and in <code>config.ini</code> that's on your PC, configure the same password in <code>Cfg.RconPass</code> to have admin privileges. Type in <code>/rcon</code> in the console to use it, examples:</p> <p>Notes</p> <p>You can also set the <code>rcon</code> client password directly in the game console with:</p> <pre><code>/rconpass [password]\n</code></pre> <p>It'll add a password to <code>Cfg.RconPass</code> in your local <code>config.ini</code>. The password should match the one set on the server.</p> <pre><code>/rcon [command] [parameters]\n</code></pre> <p>change a map <pre><code>/rcon map DM_Lockout\n</code></pre></p> <p>restart a map <pre><code>/rcon restartmap\n</code></pre></p> <p>kick a player <pre><code>/rcon kick [playername] \n</code></pre></p>"},{"location":"guides/multiplayer/pk-plus-cmd/","title":"PK++ Command list","text":"<pre><code>addbot \u2013 Server only. Adds a bot to the server.\naddloc \u2013 Server only. Adds a location name.\naddwaypoint \u2013 Server only. Adds a waypoint.\nallowbrightskins \u2013 Server only. Toggles brightskins on/off.\nallowbunnyhopping \u2013 Server only. Toggles bunnyhopping on/off.\nallowforwardrj \u2013 Server only. Toggles forward rocket jumping on/off.\nallready \u2013 Server only. Sets all players to ready.\nallunready \u2013 Server only. Sets all players to unready.\naltscoreboard \u2013 Client only. Toggles alternative scoreboard colours (on new scoreboard).\nammolist \u2013 Client only. Toggles rendering of HUD ammolist.\nammolisthideweapons \u2013 Client only. Toggles rendering of weapons in ammolist.\nautorecord \u2013 Client only. Toggles the automatic recording of matches.\nautoscreenshot \u2013 Client only. Toggles the automatic screenshot of final scoreboard.\nbankick \u2013 Server only. Kicks and bans a player from the server by specified name.\nbankickid \u2013 Server only. Kicks and bans a player from the server by specified clientID.\nbenchmark \u2013 Client only. Performs a rendering benchmark test.\nbind \u2013 Client only. Binds a command to a key.\nbotattack \u2013 Server only. Toggles whether bots will attack.\nbotchat \u2013 Server only. Toggles whether bots talk.\nbotminplayers \u2013 Server only. Specifies the number of player below which bots are added.\nbotskill \u2013 Server only. Specifies the aiming skill level of the bot. 1-10.\nbreak \u2013 Client only. Indicates you want to stop a match.\nbreakmatch \u2013 Server only. Stops a match.\nbrightskinenemy \u2013 Client only. Sets the brightskin colour of enemy players.\nbrightskinteam \u2013 Client only. Sets the brightskin colour of team players.\ncallvote \u2013 Client only. Calls a vote.\ncamerainterpolateangle \u2013 Client only. Not used.\ncamerainterpolateposition \u2013 Client only. Not used.\ncamerainterpolation \u2013 Client only. Not used.\ncamerapitch \u2013 Client only. Sets the camera pitch in spectator mode.\ncamerayaw \u2013 Client only. Sets the camera yaw in spectator mode.\ncapturelimit \u2013 Server only. Sets the capture limit for CTF.\nclientbandwidth \u2013 Client only. Sets the maximum upstream bandwidth.\ncoloredicons \u2013 Client only. Toggles the rendering of coloured HUD icons.\ncolouredicons \u2013 Client only. Toggles the rendering of coloured HUD icons.\nconfiguremapview \u2013 Client only. Toggles configure mode for mapview.\nconnect \u2013 Client only. Connects to a specified IP.\nconnectpktv \u2013 Client only. Not used.\ncrosshair \u2013 Client only. Toggles the rendering of a crosshair.\ncrosshairnames \u2013 Client only. Toggles the rendering of crosshair names.\ncrosshairnamesteamonly \u2013 Client only. Toggles the whether crosshair names are shown for team only.\ndeadbodyfix \u2013 Server only. Not used.\ndemolist \u2013 Client only. Displays list of demos.\ndemoplay \u2013 Client only. Plays a specified demo.\ndemoplaybmp \u2013 Client only. Plays a specified demo and outputs screenshots for each frame.\ndemorecord \u2013 Client only. Records a demo to a specified file name.\ndemostop \u2013 Client only. Stops recording a demo.\ndirectinput \u2013 Client only. Toggles Direct Input.\ndisablehud \u2013 Client only. Toggles rendering of HUD.\ndisconnect \u2013 Client only. Disconnects from a server.\nenemyinterpolation \u2013 Client only. Toggles player interpolation (smoothing movement).\nentityplayer \u2013 Both. Debug.\nentityplayerstats \u2013 Both. Debug.\nexec \u2013 Both. Loads the settings from a specified config.\nexit \u2013 Both. Exits the game.\nexpo \u2013 Both. Debug.\nfallingdamage \u2013 Server only. Toggles falling damage.\nfixedcolors \u2013 Client only. Toggles whether brightskins swap depending on your team.\nfixedcolours \u2013 Client only. Toggles whether brightskins swap depending on your team.\nforcejoin \u2013 Server only. Forces a specified clientID to join the game.\nforcespec \u2013 Server only. Toggles force spectator mode while game is playing.\nforcespectator \u2013 Server only. Forces a specified clientID to spectate.\nfov \u2013 Client only. Sets your Field Of Vision.\nfraglimit \u2013 Server only. Sets the fraglimit.\nfreezerfix \u2013 Server only. Not used.\ngamemode \u2013 Server only. Sets the gamemode.\nget \u2013 Both. Returns the value of a config setting.\nhmrecord \u2013 Client only. Not used.\nhmtest \u2013 Client only. Not used.\nhudsize \u2013 Client only. Sets the size at which the HUD is rendered.\nimpureclientwarning \u2013 Server only. Toggles whether impure clients are warned about in console publically.\nkick \u2013 Server only. Kicks the specified player by name.\nkickallbots \u2013 Server only. Kicks all the bots from the server.\nkickbot \u2013 Server only. Kicks the last bot to join the server.\nkickid \u2013 Server only Kicks the specified player by clientID.\nkill \u2013 Client only. Kills yourself.\nlmslives \u2013 Server only. Sets the LMS gamemode lives.\nlogging \u2013 Both. Toggles whether console is logged to file.\nmap \u2013 Server only. Changes to a specified map.\nmaplist \u2013 Both. Lists the maps currently available.\nmapview \u2013 Client only. Toggles rendering of mapview overview in spectator mode.\nmapviewshowrespawns \u2013 Client only. Toggles the rendering of spawn locations in spectator mode (used for configuration).\nmaxplayers \u2013 Server only. Sets the maximum number of players for a match.\nmaxspectators \u2013 Server only. Sets the maximum number of spectators.\nmotd \u2013 Server only. Sets the Message of the Day.\nmsensitivity \u2013 Client only. Sets the mouse sensitivity.\nmsmooth \u2013 Client only. Toggles mouse smoothing.\nname \u2013 Client only. Sets your player name.\nnetstats \u2013 Client only. Toggles rendering of network statistics on HUD. Debug.\nnetstatsavgfrom \u2013 Client only. Sets the number of frames from which to take the average for statistics.\nnetstatsupdatedelay \u2013 Client only. Sets how often network statistics are updated on HUD.\nnoblood \u2013 Client only. Toggles the rendering of blood effects.\nnodecals \u2013 Client only. Toggles the rendering of decals/ marks on walls.\nnoexplosions \u2013 Client only. Toggles the rendering of explosions.\nnoflames \u2013 Client only. Toggles the rendering of flames.\nnogibs \u2013 Client only. Toggles the rendering of gibs\nnosmoke \u2013 Client only. Toggles the rendering of smoke.\nnospawneffects \u2013 Client only. Toggles the rendering of spawn effects.\nnotready \u2013 Client only. Indicates you are not ready to start a match.\noldscoreboard \u2013 Client only. Toggles the use of the old VPK scoreboard.\novertime \u2013 Server only. Sets the amount of overtime in the event of a tied game.\npitabotenabled \u2013 Server only. Toggles the use of advanced pitabot scorebot features.\npkalwaysgib \u2013 Single player cheat.\npkammo \u2013 Single player cheat.\npkcards \u2013 Single player cheat.\npkdemon \u2013 Single player cheat.\npkgod \u2013 Single player cheat.\npkgold \u2013 Single player cheat.\npkhaste \u2013 Single player cheat.\npkhealth \u2013 Single player cheat.\npkkeepbodies \u2013 Single player cheat.\npkkeepdecals \u2013 Single player cheat.\npkpower \u2013 Single player cheat.\npkweakenemies \u2013 Single player cheat.\npkweaponmodifier \u2013 Single player cheat.\npkweapons \u2013 Single player cheat.\nplaydemo \u2013 Client only. Plays a demo from the specified file name.\nplayers \u2013 Both. Lists clientID\u2019s against player names.\nplayersgame \u2013 Both. Debug.\nplayersplayerstats \u2013 Both. Debug.\npos \u2013 Both. Debug.\npowerupdrop \u2013 Server only. Toggles whether power ups are dropped on kill.\npowerups \u2013 Server only. Toggles use of power ups.\nprint \u2013 Both. Prints a message to the console.\nprintstatsall \u2013 Both. Prints all weapon statistics for all players.\nproplus \u2013 Server only. Toggles proplus settings.\nquit \u2013 Both. Quits the game.\nrcon \u2013 Client only. Sends specified command via rcon.\nrconpass \u2013 Both. Sets the rcon password.\nready \u2013 Client only. Indicates you are ready to play a match.\nreconnect \u2013 Client only. Reconnects to last IP.\nrecorddemo \u2013 Client only. Records a demo to a specified file name.\nref \u2013 Client only. Sends a specified command via ref.\nreferee \u2013 Server only. Changes a player to referee by specified clientID\nrefpass \u2013 Both. Sets the referee password.\nreloadmap \u2013 Server only. Reloads the current map.\nreloadwaypoints \u2013 Server only. Reloads the bot waypoints for the current map.\nrestartmap \u2013 Server only. Restarts the current map.\nrocketexplosionstrength \u2013 Server only. Not used.\nrocketfactor \u2013 Server only. Not used.\nrocketfactororder \u2013 Server only. Not used.\nrocketfix \u2013 Server only. Toggles the use of PK++ rocketfix.\nrocketlogging \u2013 Server only. Not used.\nrot \u2013 Server only. Debug.\nsaferespawn \u2013 Server only. Toggles spawn telefragging safety.\nsay \u2013 Both. Broadcasts a say to all.\nscoreboardfontsize \u2013 Client only. Changes the font size for the scoreboard.\nscoreboardshowpacketloss \u2013 Client only. Toggles the rendering of packetloss in the scoreboard.\nserver \u2013 Client only. Not used.\nserverframerate \u2013 Client only. Sets the number of frames which the client wishes to receive per second.\nserverinfo \u2013 Both. Shows the server information.\nserverpassword \u2013 Server only. Sets server password.\nset \u2013 Both. Sets a config value to a specified string.\nsetb \u2013 Both. Sets a config value to a specified boolean [1/0]\nsetmaxfps \u2013 Client only. Sets the maximum rendering rate (and upstream packet rate)\nsetn \u2013 Both. Sets a config value to a specified number.\nsets \u2013 Both. Sets a config value to a specified string.\nshowfps \u2013 Client only. Toggles rendering of frame rate in HUD\nshowping \u2013 Client only. Toggles rendering of client ping in HUD\nshowpingx \u2013 Client only. Sets fraction of screen width for ping to be rendered.\nshowpingy \u2013 Client only. Sets fraction of screen height for ping to be rendered.\nshowtimer \u2013 Client only. Toggles the rendering of timer in HUD.\nshowtimercountup \u2013 Client only. Toggles whether timer should count up/down.\nshowtimerfontsize \u2013 Client only. Sets the font size for the timer.\nshowtimerx \u2013 Client only. Sets the fraction of screen width for timer to be rendering.\nshowtimery \u2013 Client only. Sets the fraction of screen height for timer to be rendering.\nshowweapon \u2013 Client only. Toggles the rendering of the gun.\nsimplehud \u2013 Client only. Toggles whether the simplified HUD should be used.\nspectator \u2013 Client only. Toggles the desired spectator/non-spectator mode.\nspeedmeter \u2013 Client only. Toggles the rendering of a speedmeter.\nstartupweapon \u2013 Server only. Sets the respawn weapon.\nstats \u2013 Both. Displays weapon statistics.\nstatsall \u2013 Both. Displays weapon statistics.\nstatsdump \u2013 Both. Displays weapon statistics and writes to file.\nstresstest \u2013 Client only. Performs stress test.\nteam \u2013 Client only. Indicates a team r/b.\nteamdamage \u2013 Server only. Toggles whether damage is received from teammates.\nteamlock \u2013 Server only. Toggles whether a team is locked during a game.\nteamoverlay \u2013 Client only. Toggles rendering of team overlay in HUD.\nteamoverlayfontsize \u2013 Client only. Sets the font size for the team overlay.\nteamoverlayw \u2013 Client only. Sets the width of the team overlay.\nteamoverlayx \u2013 Client only. Sets the fraction of the screen width for the team overlay to be displayed.\nteamoverlayy \u2013 Client only. Sets the fraction of the screen height for the team overlay to be displayed.\nteamsay \u2013 Client only. Says a message to teammates.\nteamscores \u2013 Client only. Toggles the rendering of teamscores in HUD.\nteamscoresfontsize \u2013 Client only. Sets the font size for teamscores.\nteamscoresshadow \u2013 Client only. Toggles the rendering of shadow for teamscores text.\nteamscoresx \u2013 Client only. Sets the fraction of screen width for teamscores to be rendered.\nteamscoresy \u2013 Client only. Sets the fraction of screen height for teamscores to be rendered.\ntime \u2013 Client only. Displays the local time.\ntimedemo \u2013 Client only. Plays a demo at timed speed.\ntimelimit \u2013 Server only. Sets the timelimit.\ntoggleconsole \u2013 Client only. Toggles the console open/closed.\ntpp \u2013 Both. Debug.\nversion \u2013 Both. Displays the current PK++ version.\nvote \u2013 Client only. Vote for yes or no, as specified.\nwarmupdamage \u2013 Server only. Toggles damage during warmup.\nweaponprediction \u2013 Client only. Not used.\nweaponrespawntime \u2013 Server only. Sets the weapon respawn time.\nweaponspecular \u2013 Client only. Toggles weapon specular.\nweaponsstay \u2013 Server only. Toggles whether weapons stay after pickup.\nwhere \u2013 Client only. Debug.\nwriteconfig \u2013 Both. Writes all settings to a config with the specified name.\n</code></pre>"},{"location":"guides/multiplayer/router-config/","title":"Router Configuration for Painkiller Multiplayer Server","text":"<p>Routers vary in configuration so I'll describe the router configuration on my TP-Link router.</p> <p>Basically, you need to allow the incoming connection from a client to your server on an indicated port. The default port for the original Painkiller is <code>3455</code> and for Painkiller Overdose it is <code>4974</code>. However, you can change a port in the game.</p> <p>Home routers do not usually block any outgoing traffic but firewalls can so you may need to create the firewall inbound and outbound rules for the game via TCP and UDP protocols. Inbound rules are required so that the client can connect to your server while outbound rules are required for the Painkiller game to advertise its server to <code>openspy.net</code> master servers and send packets to the client properly. From my experience, I did not have to configure the OS firewall at all.</p> <p>The scheme shows how the traffic flows from a client to a server.</p> <pre><code>flowchart BT\n  A{{Client}} --&gt;|50.153.139.143:3455| B[Router External IP];\n  B --&gt;|192.168.0.104:3455| C[OS Firewall];\n  C --&gt;|TCP, UDP| D{{Server Internal IP}};\n  D --&gt; E[OS Firewall];\n  E --&gt;|TCP, UDP| F[Router External IP];\n  F -.-&gt; A;\n  F -.-&gt; J([openspy.net]);\n  J -.-&gt; A;</code></pre> <p>From the scheme above let's assume that <code>50.153.139.143</code> is your external IP address, <code>3455</code> is the default Painkiller port, <code>192.168.0.104</code> is the IP address of your local server.</p>"},{"location":"guides/multiplayer/router-config/#configuration","title":"Configuration","text":"<p>In the following instruction, we will reserve the internal IP address and forward a Painkiller/Overdose port to it.</p> <ol> <li>Open Windows <code>CMD</code>/<code>Powershell</code> or Linux Terminal and type in the <code>hostname</code> command to find out your PC name. Alternatively for Windows, the hostname can be checked in the Windows System properties.</li> <li>Access your router. In my case, it is <code>http://192.168.0.1/</code> via a web browser. It may vary depending on your router model.</li> <li> <p>Click <code>DHCP</code> -&gt; <code>DHCP Clients</code> and locate your PC hostname. You'll see something like this:</p> ID Client name Mac address Assigned IP address Address lease time 1 MyPC 09-9A-D9-48-6C-DC 192.168.0.104 01:21:48 <p>Note</p> <p>You may have a different assigned IP address and the Mac address.</p> </li> <li> <p>Go to <code>DHCP</code> -&gt; <code>IP reservations</code>, click <code>Add</code> and assign an IP address to the Mac address of your PC:</p> ID Mac address Reserved IP address Status 1 09-9A-D9-48-6C-DC 192.168.0.104 Enabled </li> <li> <p>Restart your router. Then if you go back to <code>DHCP</code> -&gt; <code>DHCP Clients</code>, you'll see that the <code>Address lease time</code> is permanent for <code>192.168.0.104</code>.</p> </li> <li> <p>Now go to <code>Port Forwarding</code> -&gt; <code>Virtual servers</code> -&gt; <code>Add</code> and forward a port to the internal IP address of your PC server for TCP and UDP protocols (usually opening UPD protocol will be enough):</p> ID Service port Internal port IP address Protocol Status 1 3455 3455 192.168.0.104 TCP Enabled 2 3455 3455 192.168.0.104 UDP Enabled 3 4974 4974 192.168.0.104 TCP Enabled 4 4974 4974 192.168.0.104 UDP Enabled <p>Note</p> <p>Some routers have the <code>All</code> option under <code>Protocol</code> that includes both TCP and UDP.</p> <p>The default port for Painkiller is <code>3455</code> and for Painkiller Overdose it is <code>4974</code>.</p> </li> <li> <p>Check the connection. I will not go into the details but the UDP connection can be checked with <code>nc</code>/<code>ncat</code> and <code>nmap</code> (change the IP address and the port accordingly):</p> <pre><code>ncat -vnzu 50.153.139.143 3455\n</code></pre> <p>The result will look similar to this:</p> <pre><code>Connection to 50.153.139.143 3455 port [udp/*] succeeded!\n</code></pre> <p>or</p> <pre><code>Ncat: UDP packet sent successfully\n</code></pre> <p>Scan the port with <code>nmap</code>:</p> <pre><code>nmap -sU -v -p 3455 50.153.139.143\n</code></pre> <p>The port should be open in the response:</p> <pre><code>PORT     STATE         SERVICE\n3455/udp open|filtered prsvp\n</code></pre> </li> </ol>"},{"location":"guides/trickjumping/pk-autohop/","title":"Painkiller Autohop","text":"<p>This script is made by XDavidXtreme.</p> <p>You can use this code to enable the autohop (auto bhop / auto bunny hop / auto jump) feature in Painkiller. It works the same as in Xonotic, Warsow, Warfork.</p> <p>Autohop is tied to a jump action (<code>Space</code> by default) so it will even work if you bind <code>Jump</code> to another key.</p> <p>Copy the CPlayer.lua to <code>..\\Painkiller\\Data\\LScripts\\Classes\\</code>. Create folders if required.</p> <p>CPlayer.lua for original Painkiller 1.64.</p> <p>CPlayer.lua for PK++ 1.3.</p>"},{"location":"guides/trickjumping/pk-hud-movement-compass/","title":"Painkiller HUD movement compass","text":"<p>This mod is made by XDavidXtreme.</p> <p>This mod allows you to track pressed buttons in the game (Quake 3 Defrag style). It is very useful for trickjump movies.</p> <p>Copy the HUD.lua file to <code>..\\Painkiller\\Data\\LScripts\\HUD\\</code>. Create folders if required.</p> <p>Type in <code>/setmaxfps 125</code> in the game console to play with consistent physics.</p> <p>It is recommended to enable <code>/speedmeter 1</code> via the in-game console to track your speed.</p> <p>Variant 1:</p> <p>HUD.lua for original Painkiller 1.64.</p> <p>HUD.lua for PK++ 1.3.</p> <p>Variant 2:</p> <p>HUD.lua for original Painkiller 1.64.</p> <p>HUD.lua for PK++ 1.3.</p>"},{"location":"guides/trickjumping/pk-tj-howto/","title":"How to play trick jump maps online","text":"<p>Note</p> <p>This guide describes the steps for the original Painkiller and the official PK++ 1.2 and PK++ 1.3 mods.</p> <p>No trick jump mods for Painkiller Black Edition multiplayer were released as of now so you have to play using the default game modes. That's how the old custom Painkiller trick jump maps were designed. There was an attempt to add a Race gamemode to PK++ 1.2.5 but it was never finished.</p>"},{"location":"guides/trickjumping/pk-tj-howto/#maps","title":"Maps","text":"<p>Painkiller currently has only 2 trick jump maps and their variations:</p> <ul> <li><code>DM_JumpMap_01</code> by shadow</li> <li><code>DM_Mandra_RUN</code> by Mandragora</li> </ul>"},{"location":"guides/trickjumping/pk-tj-howto/#warmup-types","title":"Warmup types","text":"<p>There are 2 types of warmups in Painkiller which is a bit confusing: WarmUp and Warmup.</p> <ul> <li> <p>WarmUp is sort of a waiting room. It is limited in time and does not give you all the weapons.</p> </li> <li> <p>Warmup (where 'up' is in a lower case) does not have time limit unless you click Ready and gives you all the weapons.</p> </li> </ul> <p>You need a game mode that supports DM maps and Warmup. Those are Team Deathmatch, Duel, and Last Man Standing.</p> <p>Duel only supports 2 players at a time and Team Deathmatch has a distracting Warmup HUD so Last Man Standing is preferable.</p>"},{"location":"guides/trickjumping/pk-tj-howto/#prerequisites","title":"Prerequisites","text":"<p>Note</p> <p>Trick jump maps better work on clean servers without PK++. However, it's still possible to complete such maps on a PK++ server.</p> <p>A server should have the following settings:</p> <ul> <li> <p><code>Cfg.NoWarmup = false</code> which is <code>false</code> by default. The <code>false</code> parameter enables the Warmup.</p> </li> <li> <p><code>Cfg.UserGameMode = true</code> which is <code>true</code> by default. This allows you to vote a game mode.</p> </li> </ul>"},{"location":"guides/trickjumping/pk-tj-howto/#how-to-play","title":"How to play","text":"<ol> <li>Join the server with the enabled Warmup.</li> <li> <p>Vote a gamemode (<code>lms</code> stands for Last Man Standing) in the game console (backtick key):</p> <p><code>/callvote gamemode lms</code></p> <p>Other players should acknowledge the change and type:</p> <p><code>/vote yes</code></p> </li> <li> <p>Once the server changed the gamemode, vote for a map:</p> <p><code>/callvote map dm_jumpmap_01</code></p> </li> <li> <p>The Warmup damage is disabled by default in the original Painkiller game, if the server runs PK++, vote to disable the Warmup damage:</p> <p><code>/callvote warmupdamage 0</code></p> </li> <li> <p>If you stuck or want to reset your position, type in the console:</p> <p><code>/kill</code></p> </li> <li> <p>If you accidentally clicked that you are Ready and Warmup is reset, you'll need to reload a map:</p> <p><code>/callvote reloadmap</code></p> </li> <li> <p>Recommended. You can change the way you gain speed and height from rocket jumps by turning off the RocketFix PK++ feature. RocketFix is usually enabled on PK++ servers. Although it's still possible to beat race maps with RocketFix on, turning off this fix on a trick jump server could immensely help in finishing those maps. Run the following command to disable it:</p> <p><code>/callvote rocketfix 0</code></p> </li> <li> <p>Optional. You can disble PK++ feature ProPlus. This feature is enabled on PK++ servers by default and it reduces the jump height a little and how rockets work in general. Run the following command to disable it:</p> <p><code>/callvote proplus 0</code></p> </li> <li> <p>Optional. You can enable an alternative way of doing rocket jumps with the Forward Rocket Jump standard Painkiller feature. This will allow you to use special button that performs a rocket jump in one click. Forward Rocket Jump is usually turned off on PK++ servers. Run the following command to enable it:</p> <p><code>/callvote allowforwardrj 1</code></p> </li> </ol>"},{"location":"guides/trickjumping/pk-tj-howto/#tips","title":"Tips","text":"<p>You can enable speed meter by typing <code>/speedmeter 1</code> via the in-game console to track your speed. Use additional HUD scripts to track the movement keys.</p>"},{"location":"guides/trickjumping/pk-trickjumps/","title":"Painkiller trickjumps","text":"<p>This guide contains a description of movement tricks used in the Painkiller game series based on PainEngine.</p> <p>Painkiller singleplayer movement mechanics are different from multiplayer mechanics but they both have air control.</p> <ul> <li>Singleplayer movement is based on Havok 2.0 physics. It is much slower than multiplayer movement but it allows jump climbing. You can combine movement tricks with Taro Cards like Speed, Dexterity, Weapon Modifier, etc. Rocket jumps and any other explosive jumps are disabled in Painkiller singleplayer, except for the Ruins (C3L4) map.</li> <li>Multiplayer movement was based on Havok 2.0 physics up to Painkiller v1.3 yet it was still different from singleplayer mechanics. Starting from v1.5, it was replaced by the code partially based on QuakeWorld and independent of Havok. The multiplayer movement is much faster than in singleplayer but the ability to climb was heavily reduced. Rocket jumps and other explosive jumps are allowed.</li> </ul> <p>Note</p> <p>Painkiller movement is dependent on FPS. The recommended MaxFPS in multiplayer is 125. This limit is set on all current multiplayer servers.</p> <p>Speedrunners use somewhere between 60-125 FPS in singleplayer depending on tricks.</p> <p>Type in <code>/setmaxfps 125</code> in the game console to set MaxFPS in the game for a local game.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#jump-mod-for-multiplayer","title":"Jump mod for multiplayer","text":"<p>No official jump mod for Painkiller Black Edition multiplayer was released but there were a couple of good trickjump maps that could be played in a warmup session.</p> <p>There was an attempt to implement a RACE mod in PK++ 1.2; it is playable but was never finished. You can try it here. The official GitHub repository.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#the-list-of-the-known-painkiller-tricks","title":"The list of the known Painkiller tricks:","text":""},{"location":"guides/trickjumping/pk-trickjumps/#bunny-hopping","title":"Bunny Hopping","text":"<p>This is a well-known mechanic where you gain speed by rapidly jumping in one direction. Ascending ramps and stairs will slow the bunny hopping down.</p> <p>Note</p> <p>Bunny Hopping can be disabled on a multiplayer server.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#pre-jump","title":"Pre-Jump","text":"<p>When there is no room to make a jump to another platform, make a jump without using any directional keys and jump in the required direction right after that. This pre-jump will give you a bit of a boost.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#changing-directions","title":"Changing Directions","text":"<p>Bunny hop in one direction and move the mouse quickly from side to side to watch over an important item.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#quick-turns","title":"Quick Turns","text":"<p>Quick turns are the tricks when you can change a movement directions key without losing speed. This is one of the most important tricks in multiplayer. There are 180 and 90-degree turns. Quick turns can be done with or without rocket boost but you need some speed to make those tricks.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#wall-bouncing","title":"Wall Bouncing","text":"<p>You use your speed to push you off the wall without turning your mouse (quick turns). Only forward and backward keys are used, so when you are close to touching the wall, you quickly press the opposite key and get a small boost from the wall.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#jump-climbing","title":"Jump Climbing","text":"<p>Note</p> <p>Jump climbing is FPS dependent. The minimum FPS should be 120, it can be done on lower like 60 - 120, but it is very hard and you are very likely to just fall off. Recommended would be 200+ even more if possible. Jump climbing with 30-60 FPS is almost impossible, you will fall off all the time. With 0 - 30, you can't do jump wall climbing at all.</p> <p>This technique is mostly used when you need to reach secret places in singleplayer or for speedruns. It sort of works in multiplayer too but it is very reduced there. You basically need to rapidly press the jump button when you face a steep or curved surface.</p> <p>A good example is the secrets on the <code>C9L1 Cathedral</code> level from Painkiller Resurrection, especially the fifth one.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#wall-sliding","title":"Wall Sliding","text":"<p>Singleplayer only. You bunnyhop into surfaces that have a ramp shape and hold the forward key (<code>W</code>) while you keep your view at about 45 degrees from it. The bigger or smaller it is, the less speed you have.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#squeezing","title":"Squeezing","text":"<p>You can squeeze your hitbox between objects. This trick is FPS dependent and only works at 60 FPS and lower.</p> <p>If you have more than 120 FPS, you won't be able to get out of that secret in C6L2 Loony Park.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#moving-object-speed-preservation","title":"Moving Object Speed Preservation","text":"<p>Singleplayer only. When you leave a moving object without jumping off of it (walking off the edge or something), you preserve all the speed the object underneath you had.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#using-jumppads","title":"Using Jumppads","text":"<p>Jumppads will transfer all your input speed to the jump speed. The faster you be before landing on a jumppad, the longer distance it will push you out.</p> <p>Jumppad physics is FPS-dependent. The more FPS you have, the smaller jump you get. If you create a multiplayer map, make sure to type in <code>/setmaxfps 125</code> in the game console to set MaxFPS to test the map locally with the recommended physics setting.</p> <p>Note</p> <p>It is worth mentioning that there is air control in Painkiller if you are launched in the air with some horizontal speed. However, if you are launched with zero horizontal speed, the air control does not work. This is the reason for a problem when you can be locked up jumping on a jumppad and can do nothing about it and, unlike in Quake, jumppads in Painkiller do not absorb the fall damage.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#pk-jump","title":"PK Jump","text":"<p>PK Jump only works in singleplayer thanks to the Havok 2.0 physics. Kill an enemy, jump on its ragdoll and use the secondary fire (Killer) of a Painkiller weapon and jump. You can also use different moving objects for this purpose. It is somewhat similar to the Half-Life 2 Prop Flying technique.</p> <p>Another usage example:</p>"},{"location":"guides/trickjumping/pk-trickjumps/#shotgun-jump","title":"Shotgun Jump","text":"<p>Singleplayer only. Jump on a ragdoll or a moving object, shoot using primary fire (Shotgun), and jump.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#bolt-gun-jump","title":"Bolt Gun Jump","text":"<p>Singleplayer only. This trick is similar to PK Jump and Shotgun Jump. Jump on a ragdoll or a moving object, shoot using primary fire (Bolts), and jump. You can actually boost yourself up that way with any weapon but Bolt Gun gives you the most height.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#electrodriver-jump-on-fireworks-barrels","title":"Electrodriver Jump on fireworks barrels","text":"<p>Singleplayer only. Jump on a fireworks barrel, shoot shurikens into it and jump.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#electrodriver-jump-with-weapon-modifier","title":"Electrodriver Jump with Weapon Modifier","text":"<p>You can perform an Electrodriver Jump in multiplayer using shurikens. 'Weapon Modifier' powerup is required for this trick. When the modifier is picked up, Electrodriver shurikens will start to explode with some delay so you can shoot 2-3 shurikens below yourself and have a little height boost. This trick is not effective in multiplayer and powerups are usually turned off on servers.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#grenade-jump","title":"Grenade Jump","text":"<p>Multiplayer only. Your grenade can hit you immediately if it bounced off a surface once so you don't need to wait for the grenade timer to make this trick.</p> <p>Another variant of this trick when the nade timer is up:</p>"},{"location":"guides/trickjumping/pk-trickjumps/#grenade-jump-on-a-barrel","title":"Grenade Jump on a barrel","text":"<p>Multiplayer only. A grenade explodes immediately when hitting a barrel but the default barrel remains intact after the first shot. It means that you can do a grenade jump directly on a barrel. Can be tested on DM_Unseen, DM_Gloomy, DM_Swamp.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#rocket-boost","title":"Rocket Boost","text":"<p>Multiplayer only. Shoot a rocket into a wall and jump backward. The video shows the combination of rocket boosts and quick turns.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#rocket-jump","title":"Rocket Jump","text":"<p>Multiplayer only. A well-known technique that gives you acceleration and height when you jump and shoot a rocket below your position. There is also a <code>Rocket Jump</code> key in the Painkiller game <code>Controls</code> settings that can be assigned which is basically a script that combines a jump and shooting a rocket at the same time.</p> <p>Note</p> <p>You can gain forward speed by even shooting a rocket in front of you but this was fixed in the PK++ multiplayer mod.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#pcf-rocket-jump","title":"PCF Rocket Jump","text":"<p>Multiplayer only. A standard rocket jump but in the PCF multiplayer game mode which makes those jumps much higher.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#forward-rocket-jump","title":"Forward Rocket Jump","text":"<p>Multiplayer only. The <code>Forward Rocket Jump</code> key can be assigned in the Painkiller <code>Controls</code> settings. It should also be enabled on the server side. If you press this button, it sends a rocket behind your back and you can do a quick forward rocket jump. It is usually useful for gaining more forward speed than height and you can also hit an enemy right behind your back. This option is mostly used on trickjump maps like DM_Mandra_RUN and DM_JumpMap_01 to gain some forward speed.</p> <p>Note</p> <p>Forward Rocket Jump is disabled on most multiplayer servers.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#tele-rocket-jump","title":"Tele Rocket Jump","text":"<p>Multiplayer only. If you do a rocket jump before entering a teleport, the momentum of your jump will be saved after exiting the teleport.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#grenade-rocket-jump","title":"Grenade + Rocket Jump","text":"<p>Combine a grenade with a rocket jump to increase the jump height.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#jumppad-rocket-jump","title":"Jumppad + Rocket Jump","text":"<p>You can jump very high by using a rocket jump right on a jumppad.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#jumppad-grenade-rocket-jump","title":"Jumppad + Grenade + Rocket Jump","text":"<p>An advanced trick to combine Grenade + Rocket Jump on a jumppad.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#team-tricks","title":"Team tricks","text":"<p>There are several team tricks like boosting a teammate in the air with a nade or rocket and keeping them in the air with bullets or pulling your teammate with the Painkiller weapon.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#multiple-rocket-jump-bug-nrj","title":"Multiple Rocket Jump Bug (NRJ)","text":"<p>This bug can only be reproduced on weak PC's with bad internet connection. When the game freezes, you can shoot multiple rockets but they will be released at once when the game is unfrozen. This game lag can be caused by pressing the <code>Screenshot</code> button (F12 by default). It's hard to reproduce on a modern PC with a good internet connection. You can see on the video that this bug was used on custom DMPCF maps to make those rocket jumps even higher.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#sticky-wall-rebounce","title":"Sticky Wall (Rebounce)","text":"<p>This trick is somewhat similar to the one in Quake 3 Defrag. In Painkiller, you can get stuck inside some corners while rapidly pressing the \"jump\" key and you'll be able to accumulate speed this way and when you unstuck, the speed will be preserved. It should be noted that Painkiller has a very high fall damage so this trick may crush you on the ground when you are unstuck.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#double-jump","title":"Double Jump","text":"<p>The code with double jumps was present in the alpha release of Painkiller and presumably should have worked similarly to double jumps on ramps and stairs in Quake 2. This feature was bugged and not polished. The developers removed it completely after the game's release.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#stake-combo-jump","title":"Stake Combo Jump","text":"<p>This trick is currently only present in the Painkiller Multiplayer remake based on Unreal Engine 4  by dilettante.</p> <p>In the original Painkiller, you can only do a stake combo with a grenade when a grenade does not bounce off a surface. In the Painkiller Multiplayer remake, you can do those combos even if a grenade bounces off a surface so it allows you to do a stake combo jump trick from the ground.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#painkiller-grapple-hook","title":"Painkiller Grapple Hook","text":"<p>Some custom mods use the Painkiller secondary fire (Killer) as a grapple hook. In the original game, the Painkiller secondary fire can only pull moving objects toward you but it is unable to pull your character.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#wall-running","title":"Wall Running","text":"<p>It was either a multiplayer bug or a not-removed tested feature from the first release of Painkiller Resurrection. Wall running worked similarly to jump climbing. It was removed later on.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#additions","title":"Additions","text":"<p>You can see in some Painkiller videos that the first Painkiller weapon (the primary fire) is used in reaching heights during jump climbing. In reality, the primary Painkiller fire (Pain) in the default Painkiller Black Edition setup does not give you any boost.</p>"},{"location":"guides/trickjumping/pk-trickjumps/#recommended-video-channels","title":"Recommended video channels","text":"<p>pkmorfofficial</p> <p>painkillerzone</p> <p>XDavidXtreme</p> <p>Sp1eler</p> <p>AndySYS</p> <p>pooolpain</p> <p>Artas1984</p> <p>mudzah</p> <p>cyody</p> <p>3dimon3</p> <p>Pk Zone archive</p>"}]}